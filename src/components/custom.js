$(document).ready(function () {

    //Bank Data
    const bank_data = {
      "ABPB": "ADITYA BIRLA PAYMENTS BANK",
      "AIRP": "AIRTEL PAYMENTS BANK LIMITED",
      "ALLA": "ALLAHABAD BANK",
      "ANDB": "ANDHRA BANK",
      "UTIB": "AXIS BANK LTD",
      "BDBL": "BANDHAN BANK LIMITED",
      "BBKM": "BANK OF BAHRAIN AND KUWAIT",
      "BARB": "BANK OF BARODA",
      "BKID": "BANK OF INDIA",
      "MAHB": "BANK OF MAHARASHTRA",
      "BACB": "BASSEIN CATHOLIC COOPERATIVE BANK LIMITED",
      "BCBM": "BHARAT COOPERATIVE BANK MUMBAI LIMITED",
      "BMBL": "BHARATIYA MAHILA BANK",
      "CNRB": "CANARA BANK",
      "CSBK": "CATHOLIC SYRIAN BANK LIMITED",
      "CBIN": "CENTRAL BANK OF INDIA",
      "CENT": "CENTURIAN BANK OF PUNJAB",
      "CITI": "CITI BANK",
      "CIUB": "CITY UNION BANK LIMITED",
      "CORP": "CORPORATION BANK",
      "DCBL": "DCB BANK LIMITED",
      "BKDN": "DENA BANK",
      "DEUT": "DEUTSCHE BANK",
      "DBSS": "DEVELOPMENT BANK OF SINGAPORE",
      "DLXB": "DHANALAKSHMI BANK",
      "ESFB": "EQUITAS SMALL FINANCE BANK LIMITED",
      "FDRL": "FEDERAL BANK",
      "PJSB": "G P PARSIK BANK",
      "HDFC": "HDFC BANK LTD",
      "HSBC": "HSBC BANK",
      "ICIC": "ICICI BANK LIMITED",
      "IBKL": "IDBI BANK LTD",
      "IDFB": "IDFC BANK LIMITED",
      "IDIB": "INDIAN BANK",
      "IOBA": "INDIAN OVERSEAS BANK",
      "INDB": "INDUSIND BANK LTD",
      "VYSA": "ING VYSYA BANK LTD",
      "JAKA": "JAMMU AND KASHMIR BANK LIMITED",
      "JSBP": "JANATA SAHAKARI BANK LIMITED",
      "KCCB": "KALUPUR COMMERCIAL COOPERATIVE BANK",
      "KJSB": "KALYAN JANATA SAHAKARI BANK",
      "KARB": "KARNATAKA BANK LIMITED",
      "KVBL": "KARUR VYSYA BANK LTD",
      "KLGB": "KERALA GRAMIN BANK",
      "KKBK": "KOTAK MAHINDRA BANK LTD",
      "LAVB": "LAXMI VILAS BANK LTD",
      "NKGS": "NKGSB COOPERATIVE BANK LIMITED",
      "ORBC": "ORIENTAL BANK OF COMMERCE",
      "PYTM": "PAYTM PAYMENTS BANK LTD",
      "PRTH": "PRATHAMA BANK",
      "PMCB": "PUNJAB AND MAHARASHTRA COOPERATIVE BANK",
      "PSIB": "PUNJAB AND SIND BANK",
      "PUNB": "PUNJAB NATIONAL BANK",
      "RATN": "RBL Bank Limited",
      "SRCB": "SARASWAT COOPERATIVE BANK LIMITED",
      "SIBL": "SOUTH INDIAN BANK",
      "SCBL": "STANDARD CHARTERED BANK LTD.",
      "SBIN": "STATE BANK OF INDIA",
      "SURY": "SURYODAY SMALL FINANCE BANK LIMITED",
      "SYNB": "SYNDICATE BANK",
      "TMBL": "TAMILNAD MERCANTILE BANK LIMITED",
      "COSB": "THE COSMOS CO OPERATIVE BANK LIMITED",
      "MSNU": "THE MEHSANA URBAN COOPERATIVE BANK",
      "ABNA": "THE ROYAL BANK OF SCOTLAND N V",
      "SVBL": "THE SEVA VIKAS COOPERATIVE BANK LIMITED",
      "SVCB": "THE SHAMRAO VITHAL COOPERATIVE BANK",
      "TNSC": "THE TAMIL NADU STATE APEX COOPERATIVE BANK",
      "TBSB": "THE THANE BHARAT SAHAKARI BANK LIMITED",
      "TJSB": "TJSB SAHAKARI BANK LTD",
      "UCBA": "UCO BANK",
      "UJVN": "UJJIVAN SMALL FINANCE BANK LIMITED",
      "UBIN": "UNION BANK OF INDIA",
      "UTBI": "UNITED BANK OF INDIA",
      "VIJB": "VIJAYA BANK",
      "YESB": "YES BANK LTD",
      "ZSBL": "ZILA SAHAKRI BANK LIMITED GHAZIABAD",
      "ABHY": "ABHYUDAYA CO-OPERATIVE BANK",
      "ADCC": "THE AKOLA DISTRICT CENTRAL COOPERATIVE BANK LTD",
      "SUTB": "THE SUTEX CO-OP.BANK LTD.",
      "BGBX": "BIHAR GRAMIN BANK",
      "VARA": "THE VARACHHA CO-OP BANK LTD",
      "KAIJ": "KALLAPPANNA AWADE ICHALKARANJI JANATASAHAKARI BANK",
      "TACX": "The Adinath Co Op Bank Ltd",
      "ACUX": "The Adarsh Co Op Urban Bank Ltd",
      "BNPA": "BNP Paribas",
      "UCBS": "The Utkal Cooperative Banking Society Ltd",
      "REBX": "RENDAL SAHAKARI BANK LTD RENDAL",
      "LKMX": "Lokmangal Co-Op. Bank Ltd. Solapur",
      "AGCX": "The Agrasen Co-operative Urban Bank Ltd",
      "MOGX": "THE MOGA CENTRAL COOPERATIVE BANK LTD",
      "NALX": "National Urban Cooperative Bank Ltd",
      "KOCX": "KONOKLOTA MAHILA URBAN COOP BANK LTD",
      "UCUX": "UNIVERSAL CO-OPERATIVE URBAN BANK LTD",
      "RAMX": "THE RAJPUTANA MAHILA URBAN CO OPERATIVE BAK LTD",
      "APGB": "ANDHRA PRAGATHI GRAMEENA BANK",
      "NCCX": "The Nabadwip Co-operative Credit Bank Ltd",
      "MBCX": "THE MUGBERIA CENTRAL CO-OPERATIVE BANK LTD",
      "TSIX": "The Shillong Cooperative Urban Bank Ltd",
      "AMRX": "Amreli Jilla Madhyastha Sahakari Bank Ltd",
      "DDBX": "DHARMAPURI DISTRICT CENTRAL CO OP BANK LTD",
      "SAGX": "Saurashtra Gramin Bank",
      "IUCB": "Integral Urban Co Op Bank Ltd",
      "KDCX": "Kozhikode District Co Op Bank",
      "VIJX": "The Vijay Co Op Bank Ltd",
      "ZSHX": "Zila Sahakari Bank Ltd Haridwar",
      "PCUX": "The Pochampally Co Op Urban Bank Ltd",
      "GCUX": "Gayatri Co-operative Urban Bank Ltd",
      "MSOX": "Manorama Co Op Bank Ltd Solapur",
      "NSGX": "Nagar Sahakari Bank Ltd. Gorakhpur",
      "JASB": "Janaseva Sahakari Bank Borivli Ltd",
      "JUCX": "The Junagadh Commercial Co-Op Bank Ltd",
      "STRX": "Sterling Urban Co Operative Bank Ltd",
      "KSCB": "The Karnataka State Co-Operative Apex Bank Ltd",
      "VCCX": "Shri Veershaiv Co-Op Bank Ltd",
      "AMAX": "Aman Sahakari Bank Ltd",
      "BURX": "The Burdwan Central Co op Bank Ltd",
      "MERX": "Meghalaya Rural Bank",
      "KHAX": "KHALILABAD NAGAR SAHKARI BANK LTD",
      "TEHX": "TEHRI GARHWAL ZILA SAHKARI BANK LTD",
      "SCCX": "The Salem District Central Co Op Bank Ltd",
      "TGMB": "Tumkur Grain Merchant's Co-operate Bank Ltdz",
      "BHSX": "Bharati Sahakari Bank Ltd. Pune",
      "KUNS": "THE KURMANCHAL NAGAR SAHKARI BANK LTD",
      "APBL": "THE ANDHRA PRADESH STATE CO OP BANK LTD",
      "KASX": "KASHMIR MERCANTILE CO OPERATIVE BANK LTD",
      "SWMX": "SAWAI MADHOPUR URBAN CO OPERATIVE BANK LTD",
      "TCUB": "The Trivandrum Co-operative Urban Bank Ltd",
      "TECX": "The Eenadu Coop Urban Bank Ltd",
      "CHSX": "The Chandigarh State Co-op Bank Ltd",
      "CURX": "The Citizens Urban Cooperative Bank Ltd.",
      "JSCX": "Jharkhand State Co-Operative Bank Ltd",
      "NOIX": "Noida Commercial Co-Operative Bak Ltd",
      "PDCX": "Pune District Central Co-operative Bank Ltd.",
      "RCUX": "Rajadhani Co Op Urban Bank Ltd",
      "SHUX": "SHUSHRUTI SOUHARDA SAHAKARA BANK NIYAMITA",
      "ZSGX": "ZILA SAHKARI BANK LTD GARHWAL KOTDWAR",
      "SDCB": "The Surat District Co-Op Bank",
      "TSAB": "TELANGANA STATE CO OP APEX BANK LTD",
      "VJSX": "Vasai Janata Sahakari Bank Ltd",
      "NAIX": "NAINITAL DISTRICT CO OPERATIVE BANK LTD",
      "CMCX": "COMMERCIAL COOP BANK LIMITED",
      "UTZX": "UTTARKASHI ZILA SAHKARI BANK LTD",
      "GCBX": "The Guruvayur Co-operative Urban Bank Ltd",
      "LBMX": "Laxmibai Mahila Nagrik Sahakari Bank Maradit",
      "SDBX": "SAMATA CO-OPERATIVE DEVELOPMENT BANK LTD",
      "TKUX": "THE KARAN URBAN CO OP BANK LTD",
      "RGCX": "RAMGARHIA CO OP BANK LTD",
      "DSPX": "DURGAPUR STEEL PEOPLES CO OP BANK LTD",
      "FGCB": "FINGROWTH CO OP BANK LTD",
      "NSBX": "Nagrik Sahakari Bank Ltd Lucknow",
      "PALX": "PALI URBAN CO OPERATIVE BANK LTD",
      "JHAX": "Jharneshwar Nagrik Sahakari Bank Maryadit",
      "AJSX": "AMBARNATH JAI HIND CO OP BANK LTD",
      "GSCB": "THE GUJARAT STATE CO OP BANK LTD",
      "LCCX": "The Ludhiana Central Cooperative Bank Ltd",
      "NOBX": "NOBLE CO OP BANK LTD",
      "MHSX": "Mahesh Sahakari Bank Ltd Pune",
      "KNPX": "KARNALA NAGARI SAHAKARI BANK LTD PANVEL",
      "NDCX": "THE NILGIRIS DISTRICT CENTRAL CO OP BANK LTD",
      "SVNX": "SHIVAJI NAGARI SAHAKARI BANK LTD",
      "KTBX": "THE KOTTAYAM DISTRICT CO-OPERATIVE BANK LTD",
      "KBCX": "HE KANAKAMAHALAKSHMI CO OP BANK LTD",
      "GSSX": "GUARDIAN SOUHARDA SAHAKARI BANK NIYAMITA",
      "UKGX": "UTTARBANGA KSHETRIYA GRAMIN BANK",
      "NICB": "NEW INDIA CO-OP BANK LTD",
      "SSDX": "SUCO SOUHARDA SAHAKARI BANK",
      "CSBX": "CHARTERED SAHAKARI BANK NIYAMITHA",
      "VEDX": "HE VELLORE DISTRICT CENTRAL CO OP BANK LTD",
      "RNSX": "RAJDHANI NAGAR SAHKARI BANK LTD",
      "CHAX": "CHAMOLI ZILA SAHKARI BANK LTD",
      "TBCX": "THE BHARATH CO OP BANK LTD",
      "PATX": "PATHANMTHITTA DISTRICT CO OP BANK LTD",
      "PLUX": "PALUS SAHAKARI BANK LTD",
      "SSLX": "THE SOLAPUR SOCIAL URBAN CO OP BANK LTD",
      "SJSX": "SOLAPUR JANATA SAHAKARI BANK LTD",
      "BACX": "THE BIHAR AWAMI CO OP BANK LTD",
      "TUOX": "THE URBAN CO OP BANK LTD SAHARANPUR",
      "KRDX": "THE KRISHNA DISTRICT CO OP BANK",
      "TPDX": "THE PRAKASAM DISTRICT CO OP CENTRAL BANK LTD",
      "CHDX": "THE CHITTOOR DISTRICT CO OP CENTRAL BANK LTD",
      "DCKX": "THE DISTRICT CO OP CENTRAL BANK LTD KURNOOL",
      "DCDX": "THE DISTRICT CENTRAL CO OP BANK LTD ELLURU",
      "TVDX": "THE DISTRICT CO OP CENTRAL BANK LTD VIZIANAGARAM",
      "TADX": "THE ANANTAPUR DISTRICT CO OP CENTRAL BANK LTD",
      "TDIX": "THE DISTRICT CO OP CENTRAL BANK LTD KAKINADA",
      "TSDX": "THE DISTRICT CO OP CENTRAL BANK LTD SRIKAKUL",
      "KAAX": "THE KADAPPA DISTRICT CO OP CENTRAL BANK LTD",
      "PSRX": "SRI POTTI SRIRAMULU NELLORE DCCB",
      "DICX": "THE DISTRICT CO OP CENTRAL BANK LTD VISAKHAPATNAM",
      "GDCX": "THE GUNTUR DISTRICT CO OP CENTRAL BANK LTD",
      "ITDX": "THE INCOME TAX DEPT CO OP BANK LTD MUMBAI",
      "XJKG": "J AND K GRAMEEN BANK",
      "SDSX": "THE SATARA DISTRICT CENTRAL CO OP BANK LTD",
      "USFB": "UJJIVAN SMALL FINANCE BANK LTD",
      "PKGB": "PRAGATHI KRISHNA GRAMIN BANK",
      "AKJB": "AKOLA JANATA COMMERCIAL COOPERATIVE BANK",
      "ANZB": "AUSTRALIA AND NEW ZEALAND BANKING GROUP LIMITED",
      "IBBK": "BANK INTERNASIONAL INDONESIA",
      "CTCB": "CHINATRUST COMMERCIAL BANK LIMITED",
      "CTBA": "COMMONWEALTH BANK OF AUSTRALIA",
      "CRES": "CREDIT SUISEE AG",
      "DEOB": "DEOGIRI NAGARI SAHAKARI BANK LTD. AURANGABAD",
      "DICG": "DEPOSIT INSURANCE AND CREDIT GUARANTEE CORPORATION",
      "DMKJ": "DMK JAOLI BANK",
      "DOHB": "DOHA BANK QSC",
      "EBIL": "EMIRATES NBD BANK P J S C",
      "ESMF": "ESAF SMALL FINANCE BANK LIMITED",
      "EIBI": "EXPORT IMPORT BANK OF INDIA",
      "FSFB": "FINCARE SMALL FINANCE BANK LTD",
      "FINO": "FINO PAYMENTS BANK",
      "FIRN": "FIRSTRAND BANK LIMITED",
      "GGBK": "GURGAON GRAMIN BANK",
      "HPSC": "HIMACHAL PRADESH STATE COOPERATIVE BANK LTD",
      "IDUK": "IDUKKI DISTRICT CO OPERATIVE BANK LTD",
      "ICBK": "INDUSTRIAL AND COMMERCIAL BANK OF CHINA LIMITED",
      "IBKO": "INDUSTRIAL BANK OF KOREA",
      "KCBL": "KAPOL COOPERATIVE BANK LIMITED",
      "KOEX": "KEB Hana Bank",
      "KDCB": "KOZHIKODE DISTRICT COOPERATIAVE BANK LTD",
      "MAHG": "Maharashtra Gramin Bank",
      "NATA": "NATIONAL AUSTRALIA BANK LIMITED",
      "NBAD": "NATIONAL BANK OF ABU DHABI PJSC",
      "NMGB": "NORTH MALABAR GRAMIN BANK",
      "QNBA": "QATAR NATIONAL BANK SAQ",
      "RSBL": "RAJGURUNAGAR SAHAKARI BANK LIMITED",
      "SBLS": "SAMARTH SAHAKARI BANK LTD",
      "SABR": "SBER BANK",
      "SKSB": "SHIKSHAK SAHAKARI BANK LIMITED",
      "SMCB": "SHIVALIK MERCANTILE CO OPERATIVE BANK LTD",
      "SJSB": "SOLAPUR JANATA SAHAKARI BANK LIMITED",
      "SBHY": "State Bank of Hyderabad",
      "SBBJ": "State Bank of Bikaner & Jaipur",
      "SBMY": "State Bank of Mysore",
      "STBP": "State Bank of Patiala",
      "SBTR": "State Bank of Travancore",
      "TTCB": "TEXTILE TRADERS CO OPERATIVE BANK LTD",
      "BARA": "THE BARAMATI SAHAKARI BANK LTD",
      "DLSC": "THE DELHI STATE COOPERATIVE BANK LIMITED",
      "HARC": "THE HARYANA STATE COOPERATIVE APEX BANK LTD",
      "KANG": "THE KANGRA COOPERATIVE BANK LIMITED",
      "NVNM": "THE NAVNIRMAN CO-OPERATIVE BANK LIMITED",
      "PUCB": "THE PANDHARPUR URBAN CO OP. BANK LTD. PANDHARPUR",
      "SIDC": "THE SINDHUDURG DISTRICT CENTRAL COOP BANK LTD",
      "UOVB": "UNITED OVERSEAS BANK LIMITED",
      "WPAC": "WESTPAC BANKING CORPORATION",
      "HVBK": "WOORI BANK",
      "IDFC": "IDFC Bank Limited",
      "AJHC": "AMBARNATH JAIHIND COOP BANK LTD AMBARNATH",
      "AMDN": "AHMEDNAGAR MERCHANTS CO-OP BANK LTD",
      "APGV": "ANDHRA PRADESH GRAMEENA VIKAS BANK",
      "BNSB": "BHAGINI NIVEDITA SAHAKARI BANK LTD PUNE",
      "DURG": "DURGAPUR STEEL PEOPLES CO-OPERATIVE BANK LTD",
      "IPOS": "INDIA POST PAYMENT BANK",
      "ITBL": "Irinjalakuda Town Co-Operative Bank Ltd",
      "JIOP": "JIO PAYMENTS BANK LIMITED",
      "KRTH": "KRUNG THAI BANK PCL",
      "MVCB": "SIR M VISVESVARAYA CO OPERATIVE BANK LTD",
      "NBRD": "NATIONAL BANK FOR AGRICULTURE AND RURAL DEVELOPMENT",
      "NSPB": "NSDL Payments Bank Limited",
      "RBIH": "IDRBT",
      "RBIS": "RESERVE BANK OF INDIA, PAD",
      "RRBP": "RAJARAMBAPU SAHAKARI BANK LIMITED",
      "SIDB": "SMALL INDUSTRIES DEVELOPMENT BANK OF INDIA",
      "SVSH": "Shri Veershaiv Co Op Bank Ltd",
      "VASJ": "VASAI JANATA SAHAKARI BANK LTD",
      "AACX": "AKHAND ANAND CO.OP BANK LTD.",
      "ABCX": "THE AURANGABAD DISTRICT CENTRAL COOP BANK LIMITED",
      "ABDX": "DR. AMBEDKAR NAGRIK SAHAKARI BANK MYDT GWALIOR",
      "ABEX": "THE ANDHRA BANK EMPLOYEES CO OPERATIVE BANK LTD.",
      "ABSB": "THE ABHINAV SAHAKARI BANK LIMITED",
      "ACAX": "THE ASSAM COOPERATIVE APEX BANK LTD.",
      "ACBX": "ADARSH CO-OPERATIVE BANK LTD.",
      "ACCX": "ACE COOPERATIVE BANK LTD.",
      "ACKX": "ANNASAHEB CHOUGULE URBAN CO-OP BANK LTD.",
      "ACOX": "AMARNATH COOP BANK LTD.",
      "ACUB": "THE ARYAPURAM COOPERATIVE URBAN BANK LTD.",
      "ADBX": "THE AHMEDABAD DISTRICT CO-OPERATIVE BANK LTD.",
      "ADCB": "ABU DHABI COMMERCIAL BANK",
      "ADCX": "SHRI ADINATH CO-OP.BANK LTD.",
      "ADDX": "THE ADILABAD DISTRICT CO-OP CENTRAL BANK LTD.",
      "AGDX": "AGRA DISTRICT CO OPERATIVE BANK LTD.",
      "AGRX": "AGROHA COOPERATIVE URBAN BANK LTD.",
      "AGUX": "AGARTALA COOPERATIVE URBAN BANK LIMITED",
      "AGVX": "ASSAM GRAMIN VIKASH BANK",
      "AJKB": "THE AKOLA JANATA COMMERCIAL CO-OPERATIVE BANK LTD.",
      "AJNX": "AJANTHA URBAN CO-OP BANK LTD.",
      "AJUX": "THE AJARA URBAN CO-OP BANK LTD. BOM",
      "AKOX": "THE AKOLA URBAN CO OPERATIVE BANK LTD.",
      "ALAX": "ALAVI CO OPERATIVE BANK LTD.",
      "ALIX": "ALIGARH DISTRICT CO OPERATIVE BANK LTD.",
      "ALLX": "ALLAHABAD DISTRICT CO OPERATIVE BANK LTD.",
      "AMCB": "THE AHMEDABAD MERCANTILE CO-OP BANK LTD.",
      "AMCX": "THE AMRITSAR CENTRAL COOPERATIVE BANK LIMITED.",
      "AMNX": "ASTHA MAHILA NAGRIK SAHAKARI BANK MARYADIT",
      "ANDX": "ANDARSUL URBAN COOP BANK LTD. ANDARSUL",
      "ANMX": "THE AHMEDNAGAR MERCHANT'S CO-OP BANK LTD.",
      "ANSX": "ANDAMAN & NICOBAR STATE COOPERATIVE BANK LTD.",
      "APCX": "THE ALAPPUZHA DISTRICT CO OPERATIVE BANK LTD.",
      "APGX": "ANDHRA PRADESH GRAMEENA VIKAS BANK",
      "APMC": "AP MAHESH COOPERATIVE BANK",
      "APNX": "APANI SAHAKARI BANK LTD.",
      "APRX": "ARUNACHAL PRADESH RURAL BANK",
      "APSX": "ADARNIYA P.D. PATILSAHEB SAHAKARI BANK LTD.",
      "ARYX": "GRAMIN BANK OF ARYAVART",
      "ASBL": "APNA SAHAKARI BANK LTD.",
      "ASBX": "AHMEDNAGAR SHAHAR SAHAKARI BANK MARYADIT",
      "ASHX": "THE ASHTA PEOPLE'S CO-OP BANK LTD. ASHTA",
      "ASKX": "ARVIND SAHAKARI BANK LTD.",
      "ASOX": "THE ASSOCIATE CO OPERATIVE BANK LTD.",
      "ASSX": "ASHOK SAHAKARI BANK LTD.",
      "AUCB": "ALMORA URBAN CO-OPERATIVE BANK LTD.",
      "AUCX": "THE AJARA URBAN CO-OP. BANK LTD.",
      "AVDX": "THE AMRAVATI DISTRICT CENTRAL CO OP BANK LTD.",
      "AWCX": "THE ALWAYE URBAN COOPERATIVE BANK LTD.",
      "BADX": "BANKURA DISTRICT CENTRAL COOPERATIVE BANK LTD.",
      "BALX": "BALASINOR NAGARIK SAHAKARI BANK LTD.",
      "BANX": "BANARAS MERCHANTILE CO OPERATIVE BANK LTD.",
      "BARC": "BARCLAYS BANK PLC",
      "BARX": "THE BARODA CITY CO OPERATIVE BANK LTD.",
      "BASX": "SHRI BASAVESHWAR SAHAKARI BANK NYT.BAGALKOT",
      "BAVX": "THE BAVLA NAGRIK SAHAKARI BANK LTD.",
      "BBLX": "BHINGAR URBAN CO-OPERATIVE BANK LTD.",
      "BBRX": "THE BANGALORE BANGALORE RURAL&RAMANAGARA DCCB LTD.",
      "BCBX": "THE BANTRA CO-OPERATIVE BANK LTD.",
      "BCCB": "THE BANGALORE CITY CO-OPERATIVE BANK LIMITED",
      "BCCX": "THE BATHINDA CENTRAL CO-OPERATIVE BANK LTD.",
      "BCEX": "THE BANSWARA CENTRAL CO OPERATIVE BANK LTD.",
      "BCEY": "BANK OF CEYLON",
      "BCUB": "THE BICHOLIM URBAN CO-OPERATIVE BANK LTD.",
      "BDUX": "BANDA URBAN CO OPERATIVE BANK LTD.",
      "BGCX": "BALAGERIA CENTRAL COOP BANK LTD.",
      "BGGX": "BARODA GUJARAT GRAMIN BANK",
      "BGVX": "BANGIYA GRAMIN VIKASH BANK",
      "BHAX": "THE BHAGYODAYA CO OPERATIVE BANK LTD.",
      "BHDX": "BHADOHI URBAN CO OPERATIVE BANK LTD. GYANPUR",
      "BHEX": "BHEL EMPLOYEES COOPERATIVE BANK LTD.",
      "BHJX": "THE BHUJ MERCENTILE COOP BANK LTD.",
      "BHMX": "BRAHMADEODADA MANE SAHAKARI BANK LTD. SOLAPUR",
      "BHOX": "BHOPAL CO OPERATIVE CENTRAL BANK LTD.",
      "BHUX": "BHILWARA URBAN CO-OPERATIVE BANK LTD.",
      "BJUX": "THE BIJNOR URBAN CO OPERATIVE BANK LTD.",
      "BKDX": "THE BANASKANTHA DIST CENTRAL COOP BANK LTD.",
      "BMCB": "BOMBAY MERCANTILE CO-OPERATIVE BANK LTD.",
      "BMCX": "THE BARMER CENTRAL COOPERATIVE BANK LTD.",
      "BMPX": "THE BANASKANTHA MERCANTILE CO-OPERATIVE BANK LTD.",
      "BMSX": "THE BHAGYALAKSHMI MAHILA SAHAKARI BANK LTD.",
      "BNCX": "BHATPARA NAIHATI CO OPERATIVE BANK LTD.",
      "BNSX": "BHAGINI NIVEDITA SAHAKARI BANK LTD.",
      "BOFA": "BANK OF AMERICA",
      "BORX": "THE BORAL UNION CO OPERATIVE BANK LTD.",
      "BOTM": "THE BANK OF TOKYO MITSUBISHI UFJ",
      "BPCX": "THE BHADGAON PEOPLE'S CO-OP BANK LTD.",
      "BRCX": "THE BHAVANA RISHI COOP. URBAN BANK LIMITED",
      "BRDX": "THE BARODA CENTRAL CO-OPERATIVE BANK LTD.",
      "BRGX": "BARODA RAJASTHAN KSHETRIYA GRAMIN BANK",
      "BRMX": "BRAMHAPURI URBAN CO OPERATIVE BANK LTD.",
      "BSBX": "THE BARAMATI SAHAKARI BANK LTD.",
      "BSCX": "THE BAIDYABATI SHEORAPHULI CO OPERATIVE BANK LTD.",
      "BTCX": "BALITIKURI CO-OPERATIVE BANK LTD.",
      "BTUX": "BALOTRA URBAN CO-OPERATIVE BANK LTD.",
      "BUCX": "BEAWAR URBAN CO-OPERATIVE BANK LTD.",
      "BUGX": "BARODA UTTAR PRADESH GRAMIN BANK",
      "BUNX": "THE BUNDI CENTRAL COOP BANK LTD.",
      "BUSX": "THE BUSINESS CO-OPERATIVE BANK LTD.",
      "BUZX": "BADAUN ZILA SAHAKARI BANK LTD. BUDAUN",
      "BVNX": "BHAVNAGAR DISTRICT CO OP BANK LTD.",
      "BVSX": "BHAVANI SAHAKARI BANK LTD.",
      "CALX": "THE CALICUT CO-OPERATIVE URBAN BANK LTD.",
      "CBHX": "THE CENTRAL COOPERATIVE BANK LTD. BHILWARA",
      "CCBL": "CITIZEN CREDIT CO-OPERATIVE BANK LTD.",
      "CCBX": "THE CITIZEN COOPERATIVE BANK LIMITED",
      "CCCX": "CHENNAI CENTRAL CO-OPERATIVE BANK LTD.",
      "CCUX": "THE CHENGELPATTU CO-OP URBAN BANK LTD.",
      "CDCX": "THE CUDDALORE DISTRICT CENTRAL COOPERATIVE BANK",
      "CEBX": "THE CENTRAL COOP BANK LTD. BIKANER",
      "CGBX": "CHHATTISGARH GRAMIN BANK",
      "CGGX": "CHAITANYA GODAVARI GRAMEENA BANK",
      "CHAS": "J.P.MORGAN CHASE BANK N.A",
      "CHBX": "THE CHAMBA URBAN COOPERATIVE BANK LTD. CHAMBA",
      "CHCX": "THE CHURU CENTRAL COOPERATIVE BANK LTD.",
      "CHIX": "THE CHIKHLI URBAN CO-OP BANK LTD.",
      "CHKX": "CHITTORGARH KENDRIYA SAHAKARI BANK LTD.",
      "CHRX": "CHERPALCHERI COOP URBAN BANK LTD.",
      "CHTX": "THE CHITNAVISPURA SAHAKARI BANK LTD.",
      "CJAX": "THE CITIZENS' CO-OPERATIVE BANK LTD. JAMMU",
      "CLBL": "CAPITAL SMALL FINANCE BANK LTD",
      "CMCB": "COLOUR MERCHANT'S CO-OPERATIVE BANK LTD.",
      "CMDX": "THE COIMBATORE DISTRICT CENTRAL CO-OP BANK LIMITED",
      "CMLX": "THE COMMERCIAL CO-OPERATIVE BANK LTD.",
      "CNSX": "THE CHEMBUR NAGARIK SAHAKARI BANK",
      "COCX": "THE CO OPERATIVE CITY BANK LTD.",
      "COLX": "COASTAL LOCAL AREA BANK LTD.",
      "COMX": "THE COOP BANK OF MEHSANA LTD.",
      "CRLY": "CREDIT AGRICOLE CORPORATE & INVESTMENT BANK",
      "CRSX": "CHHATTISGARH RAJYA SAHAKARI BANK MYDT",
      "CRUB": "SHRI CHHATRAPATI RAJARSHI SHAHU URBAN CO-OP BANK",
      "CTBX": "CITIZENS CO-OPERATIVE BANK LTD.",
      "CUCX": "THE CHIPLUN URBAN COOPERATIVE BANK LTD.",
      "CZCX": "CITIZEN CO OPERATIVE BANK LTD.",
      "CZUX": "CHURU ZILA URBAN CO OPERATIVE BANK LTD.",
      "DAHX": "THE DAHOD MERCANTILE CO OPERATIVE BANK LTD.",
      "DBAX": "DR BABASAHEB AMBEDKAR SAHAKARI BANK LTD. NASIK",
      "DCBX": "DINDIGUL CENTRAL CO-OPERATIVE BANK LTD.",
      "DCCX": "THE DISTRICT COOPERATIVE CENTRAL BANK MAHABUBNAGAR",
      "DCEX": "THE DISTRICT CENTRAL COOPEARATIVE BANK LTD. KHAMMAM",
      "DCMX": "DISTRICT COOPERATIVE BANK LTD. MAINPURI",
      "DCPX": "DISTRICT CO OPERATIVE BANK LTD. PILIBHIT",
      "DCSX": "DISTRICT COOPERATIVE BANK LTD. SHAHJAHANPUR",
      "DCTX": "DISTRICT CO OPERATIVE BANK LTD. TELIYABAGH",
      "DDCX": "DARJEELING DISTRICT CENTRAL CO OPERATIVE BANK LTD.",
      "DDDX": "THE DAKSHIN DINAJPUR DISTRICT CENTRAL CO-OP BANK",
      "DDHX": "DISTRICT CO OPERATIVE BANK LTD. DEHRADUN",
      "DENS": "DELHI NAGRIK SEHKARI BANK LTD.",
      "DEOX": "DEOGIRI NAGARI SAHAKARI BANK LTD. AURANGABAD",
      "DEVX": "DEVELOPMENT CO OPERATIVE BANK LTD. KANPUR",
      "DGBX": "TELANGANA GRAMEENA BANK",
      "DHBX": "THE DHANBAD CENTRAL COOPERATIVE BANK LTD.",
      "DIBX": "DISTRICT CO OPERATIVE BANK LTD. BARABANKI",
      "DMCB": "THE DECCAN MERCHANTS CO-OPERATIVE BANK LTD.",
      "DMKB": "DMK JAOLI BANK",
      "DNSB": "DOMBIVILI NAGARI SAHAKARI BANK LTD.",
      "DNSX": "DEENDAYAL NAGARI SAHAKARI BANK LTD.",
      "DSCB": "THE DELHI STATE COOPERATIVE BANK LIMITED",
      "DSHX": "DISTRICT CO OPERATIVE BANK LTD. SAHARANPUR",
      "DTCX": "DISTRICT CO-OPERATIVE BANK LTD.RAEBARELI",
      "DUNX": "THE DUNGARPUR CENTRAL CO OPERATIVE BANK LTD.",
      "ECBL": "EXCELLENT CO-OPERATIVE BANK LTD.",
      "EDBX": "ELLAQUAI DEHATI BANK",
      "EDCX": "THE ERODE DISTRICT CENTRAL CO-OPERATIVE BANK LTD.",
      "EDSX": "THE ERNAKULAM DISTRICT CO-OPERATIVE BANK LTD.",
      "FCBX": "THE FAZILKA CENTRAL COOP. BANK LTD.",
      "FCCX": "THE FARIDKOT CENTRAL COOPERATIVE BANK LTD.",
      "FEKX": "FEROKE CO-OPERATIVE BANK LTD.",
      "FINX": "THE FINANCIAL CO OPERATIVE BANK LTD.",
      "FRIX": "THE FARIDABAD CENTRAL CO-OPERATIVE BANK LTD.",
      "FSCX": "THE FATEHGRAH SAHIB CENTRAL COOPERATIVE BANK",
      "FZCX": "THE FEROZEPUR CENTRAL COOP. BANK LTD.",
      "GACX": "GUJARAT AMBUJA CO OPERATIVE BANK LTD.",
      "GADX": "THE GADHINGLAJ URBAN CO-OP BANK LTD.",
      "GANX": "THE GANDHIDHAM CO OPERATIVE BANK LTD.",
      "GBCB": "THE GREATER BOMBAY CO-OPERATIVE BANK LIMITED",
      "GCCX": "THE GURDASPUR CENTRAL COOPERATIVE BANK LTD.",
      "GCUL": "THE GAUHATI CO-OPERATIVE URBAN BANK LTD.",
      "GDCB": "THE GADCHIROLI DISTRICT CENTRAL COOPERATIVE BANK",
      "GDUX": "THE GODHRA URBAN COOP BANK LTD.",
      "GHPX": "THE GHATAL PEOPLES' COOPERATIVE BANK LTD.",
      "GNSX": "THE GOZARIA NAGRIK SAHAKARI BANK LTD.",
      "GODX": "GODAVARI URBAN CO-OPERATIVE BANK LTD. NASHIK",
      "GOSX": "GONDAL NAGARIK SAHAKARI BANK LTD.",
      "GPCX": "THE GANDEVI PEOPLE'S CO-OPERATIVE BANK LIMITED",
      "GRAX": "THE GRAIN MERCHANTS' CO-OPERATIVE BANK LTD.",
      "GSBL": "THE GOA STATE CO-OPERATIVE BANK LTD.",
      "GSBX": "GANDHIBAG SAHAKARI BANK LTD. NAGPUR",
      "GTCX": "GEORGE TOWN CO-OPERATIVE BANK LTD.",
      "GUCX": "THE GOA URBAN CO-OPERATIVE BANK LTD.",
      "GUOX": "THE GURGAON CENTRAL COOP BANK LTD.",
      "HAMX": "HAMIRPUR DISTRICT CO OPERATIVE BANK LTD.",
      "HANX": "HANUMANGARH KENDRIYA SAHAKARI BANK LTD.",
      "HCBL": "THE HINDUSTHAN CO-OPERATIVE BANK LTD.",
      "HCBX": "THE HASTI CO-OP. BANK LTD.",
      "HDCX": "THE HYDERABAD DISTRICT COOPERATIVE BANK LTD.",
      "HGBX": "SARVA HARYANA GRAMIN BANK",
      "HISX": "THE HISAR CENTRAL CO-OPERATIVE BANK LTD. HISAR",
      "HMBX": "HIMACHAL GRAMIN BANK",
      "HOCX": "THE HOSHIARPUR CENTRAL CO-OPERATIVE BANK LTD.",
      "HOOX": "HOOGHLY DISTRICT CENTRAL CO-OPERATIVE BANK LTD.",
      "HPCX": "SHREE PARSWANATH CO-OPERATIVE BANK LTD.",
      "HPSX": "THE HIMACHAL PRADESH STATE CO-OPERATIVE BANK LTD.",
      "HSCX": "THE HARYANA STATE CO-OPERATIVE APEX BANK LTD.",
      "HSDX": "THE HASSAN DISTRICT CO-OPERATIVE CENTRAL BANK LTD.",
      "HUTX": "HUTATMA SAHAKARI BANK LTD.",
      "ICBL": "THE INDUSTRIAL CO-OPERATIVE BANK LTD.",
      "ICHX": "THE ICHALKARANJI MERCHANTS COOP BANK",
      "ICMX": "INDORE CLOTH MARKET CO-OP BANK LTD.",
      "IDUX": "IDUKKI DISTRICT CO OPERATIVE BANK LTD.",
      "IMPX": "THE IMPHAL URBAN CO OPERATIVE BANK",
      "INDX": "INDEPENDENCE CO-OP. BANK LTD. NASIK",
      "IPCX": "INDORE PREMIER CO-OPERATIVE BANK LTD. INDORE",
      "IPSX": "INDORE PARASPAR SAHAKARI BANK LTD.",
      "ISBX": "INDRAPRASTHA SEHKARI BANK LTD.",
      "ITCX": "IRINJALAKUDA TOWN CO-OPERATIVE BANK LTD.",
      "JACX": "JAIN CO-OPERATIVE BANK LIMITED",
      "JALX": "THE JANALAXMI CO-OPERATIVE BANK LTD.",
      "JAMX": "JAMIA CO-OPERATIVE BANK LTD.",
      "JANA": "JANASEVA SAHAKARI BANK LTD. PUNE",
      "JANX": "THE JANATA CO-OPERATIVE BANK LTD.",
      "JASX": "JANATHA SEVA COOPERATIVE BANK LTD.",
      "JCBX": "JANATA CO-OP. BANK LTD. MALEGAON.",
      "JCCB": "THE JAIPUR CENTRAL CO-OPERATIVE BANK LTD.",
      "JCCX": "THE JALANDHAR CENTRAL COOPERATIVE BANK LIMITED",
      "JCDX": "THE JAMNAGAR DISTRICT COOP BANK LTD.",
      "JCUX": "JAGRUTI CO-OPERATIVE URBAN BANK LTD.",
      "JDCX": "JALAUN DISTRICT CO-OPERATIVE BANK LTD.",
      "JGWX": "JILA SAHAKARI BANK MYDT. GWALIOR",
      "JHUX": "JHUNJHUNU KENDDRIYA SAHAKARI BAK LTD.",
      "JJSB": "JALGAON JANATA SAHKARI BANK LTD.",
      "JKCX": "JANAKALYAN COOP BANK LTD. NASHIK",
      "JKDX": "JILA SAHAKARI KEND.BANK",
      "JKEX": "JHALAWAR KENDRIYA SAHKARI BANK LTD.",
      "JKSX": "THE J&K STATE CO-OPERATIVE BANK LTD.",
      "JMCX": "JALNA MERCHANTS CO-OP BANK LTD.",
      "JMHX": "JAMSHEDPUR URBAN CO-OPERATIVE BANK LTD.",
      "JMMX": "THE JAMMU CENTRAL CO-OPERATIVE BANK LTD.",
      "JMPX": "THE JAMNAGAR PEOPLES COOPERATIVE BANK LTD.",
      "JMSX": "JIJAMATA MAHILA SAHAKARI BANK LTD.",
      "JODX": "THE JODHPUR CENTRAL CO OPERATIVE BANK LTD.",
      "JONX": "JODHPUR NAGRIK SAHAKARI BANK LIMITED",
      "JOWX": "THE JOWAI COOPERATIVE URBAN BANK LTD.",
      "JPCB": "THE JALGAON PEOPLES CO OP BANK LTD.",
      "JPCX": "THE JALPAIGURI CENTRAL CO-OPERATIVE BANK LTD.",
      "JSAB": "THE JAIN SAHAKARI BANK LTD.",
      "JSAX": "JANATA SAHAKARI BANK LTD. AJARA",
      "JSBL": "JANAKALYAN SAHAKARI BANK",
      "JSBX": "JANASEVA CO-OPERATIVE BANK LTD. NASHIK",
      "JSKX": "JILA SAHAKARI KENDRIYA BANK MARYADIT RAIPUR",
      "JSWX": "JANSEWA URBAN CO-OP BANK LTD.",
      "JUSX": "JAYSINGPUR UDGAON SAHAKARI BANK LTD. JAYSINGPUR",
      "JVCX": "JIVAN COMMERCIAL CO OPERATIVE BANK LTD.",
      "KACE": "THE KANGRA CENTRAL CO-OPERATIVE BANK LTD.",
      "KADX": "THE KASARAGOD DISTRICT CO-OPERATIVE BANK LTD.",
      "KALX": "THE KALNA TOWN CREDIT COOPERATIVE BANK LTD.",
      "KAMX": "KAMALA COOP BANK LTD. SOLAPUR",
      "KARX": "THE KAIRA DIST CENTRAL CO OPERATIVE BANK LTD.",
      "KAYX": "THE KANYAKUMARI DISTRICT CENTRAL COOPERATIVE BANK",
      "KBSX": "KRISHNA BHIMA SAMRUDDHI LOCAL AREA BANK",
      "KCCX": "KANCHEEPURAM CENTRAL COOPERATIVE BANK",
      "KCEX": "THE KOTA CENTRAL COOP BANK LTD. KOTA",
      "KCOB": "THE KANGRA CO-OPERATIVE BANK LTD.",
      "KCUB": "THE KHATTRI COOPERATIVE URBAN BANK LIMITED",
      "KCUX": "THE KANNUR CO-OP URBAN BANK LTD.",
      "KDBX": "THE KARIMNAGAR DISTRICT COOPERATIVE CENTRAL BANK",
      "KDIX": "SHREE KADI NAGARIK SAHAKARI BANK LTD.",
      "KGSX": "KASHI GOMTI SAMYUT GRAMIN BANK",
      "KKMX": "KANKARIA MAINAGAR NAGRIK SAHAKARI BANK LTD.",
      "KLMX": "THE KOLLAM DISTRICT CO-OP BANK LTD.",
      "KMCB": "KOKAN MERCANTILE CO-OPERATIVE BANK LTD.",
      "KMCX": "KRISHNA MERCANTILE CO-OP BANK LTD.",
      "KMSX": "KOLHAPUR MAHILA SAHAKARI BANK LTD.",
      "KNSB": "KURLA NAGARIK SAHAKARI BANK LTD.",
      "KODX": "THE KODUNGALLUR TOWN CO-OPERATIVE BANK LTD.",
      "KOYX": "THE KOYLANCHAL URBAN CO-OPERATIVE BANK LTD.",
      "KPCX": "KOLHAPUR DIST.CENTRAL CO-OP BANK LTD. KOLHAPUR",
      "KRIX": "THE KRISHNAGAR CITY CO OPERATIVE BANK LTD.",
      "KRMX": "KARAMANA COOPERATIVE URBAN BANK LTD.",
      "KRNX": "THE KARNAVATI CO.OP. BANK LTD.",
      "KSCX": "KERALA STATE CO-OPERATIVE BANK LTD.",
      "KSUX": "KASHIPUR URBAN CO OPERATIVE BANK LTD.",
      "KTCX": "THE KAPURTHALA CENTRAL COOPERATIVE BANK LTD.",
      "KUCB": "THE KARAD URBAN CO-OP BANK LTD.",
      "KUCX": "THE KOLHAPUR URBAN CO-OP BANK LTD.",
      "KUKX": "THE KUKARWADA NAGARIK SAHAKARI BANK LTD.",
      "KUMX": "THE KUMBAKONAM CENTRAL CO-OPERATIVE BANK LTD.",
      "KVCX": "KAVITA URBAN COOP BANK LTD.",
      "KVGB": "KARNATAKA VIKAS GRAMEENA BANK",
      "LACX": "THE LAXMI CO-OPERATIVE BANK LTD. SOLAPUR",
      "LATX": "THE LATUR URBAN COOP BANK LTD. LATUR",
      "LDCX": "THE LATUR DISTRICT CENTRAL CO OP BANK LTD.",
      "LICB": "LILUAH CO-OPERATIVE BANK LTD.",
      "LKCX": "THE LITTLE KANCHEEPURAM CO-OP URBAN BANK LTD.",
      "LMNX": "LAXMI MAHILA NAGRIK SAHAKARI BANK MARYADIT",
      "LOKX": "LOKVIKAS NAGARI SAHAKARI BANK LTD. AURANGABAD",
      "LUCX": "LUCKNOW URBAN CO-OPERATIVE BANK LTD.",
      "MABL": "THE MALLESHWARAM CO-OP BANK LTD.",
      "MACX": "THE MAHABHAIRAB COOP URBAN BANK LTD.",
      "MADX": "MADHYANCHAL GRAMIN BANK",
      "MAHX": "SHREE MAHALAXMI URBAN CO-OP CREDIT BANK LTD.",
      "MAKX": "THE MAKARPURA INDUSTRIAL ESTATE COOP BANK LTD.",
      "MALX": "MALVIYA URBAN CO OPERATIVE BANK LTD.",
      "MANX": "THE MANSA NAGARIK SAHAKARI BANK LTD.",
      "MASX": "MAHESH URBAN CO-OPERATIVE BANK LTD. SOLAPUR",
      "MAUX": "MANTHA URBAN CO OP BANK LTD.",
      "MAVX": "SHREE MAHAVIR SAHAKARI BANK LTD.",
      "MBGX": "MADYA BIHAR GRAMIN BANK erstwhile Dakshin Bihar Gramin Bank",
      "MCBL": "THE MAHANAGAR CO-OP. BANK LTD.",
      "MCCX": "THE MUKTSAR CENTRAL CO-OPERATED BANK LTD.",
      "MCDX": "MUZAFFARNAGAR DISTRICT COOPERATIVE BANK LTD.",
      "MCSX": "THE MATTANCHERRY SARVAJANIK COOP BANK LTD.",
      "MCUX": "MAHAVEER CO-OPERATIVE URBAN BANK LIMITED",
      "MDCB": "MUMBAI DISTRICT CENTRAL CO-OP BANK LTD.",
      "MDCX": "THE MADURAI DISTRICT CENTRAL COOPERATIVE BANK LTD.",
      "MDEX": "MODEL CO-OPERATIVE BANK LTD.",
      "MDGX": "RAJASTHAN MARUDHARA GRAMIN BANK",
      "MEDX": "THE DISTRICT CO-OPERATIVE CENTRAL BANK LTD.MEDAK",
      "MGBX": "MAHARASHTRA GRAMIN BANK",
      "MGCB": "THE MOGAVEERA CO-OPERATIVE BANK LTD.",
      "MGCX": "MANSING CO-OPERATIVE BANK LTD.",
      "MGSX": "MANGALDAI NAGAR SAMABAI BANK LTD.",
      "MHCB": "MIZUHO BANK LTD.",
      "MHCX": "MAHOBA URBAN COOPERATIVE BANK LTD. MAHOBA",
      "MHLX": "MAHILA CO-OPERATIVE BAK LTD.",
      "MHMX": "SHRI MAHALAXMI CO-OP BAK LTD. KOLHAPUR",
      "MHNX": "MAHANAGAR NAGRIK SAHAKARI BANK MARYADIT",
      "MIZX": "THE MIZORAM COOPERATIVE APEX BANK LTD.",
      "MKUX": "THE MALKAPUR URBAN CO-OP BANK LTD.",
      "MLDX": "MALDA DISTRICT CENTRAL COOPERATIVE BANK LTD.",
      "MMCX": "THE MATTANCHERRY MAHAJANIK CO-OP URBAN BANK LTD.",
      "MNCX": "THE MANSA CENTRAL CO-OPERATIVE BANK LTD.",
      "MNSX": "THE MEHSANA NAGARIK SAHAKARI BANK LTD.",
      "MPCX": "THE MOIRANG PRIMARY CO-OPERATIVE BANK LTD.",
      "MPDX": "THE MALAPPURAM DISTRICT CO-OPERATIVE BANK LIMITED",
      "MPRX": "MADHTYA PRADESH RAJYA SAHAKARI BANK MARYADIT",
      "MRBX": "MANIPUR RURAL BANK",
      "MRTX": "MARATHA COOPERATIVE BANK LTD.",
      "MSAX": "MANSAROVAR URBAN CO-OPERATIVE BANK LTD.",
      "MSBL": "THE MALAD SAHAKARI BANK LTD.",
      "MSBX": "M.S.CO-OPERATIVE BANK LTD.",
      "MSCI": "MAHARASHTRA STATE CO-OPERATIVE BANK LTD.",
      "MSCX": "THE MANIPUR STATE CO OPERATIVE BANK LTD.",
      "MSHQ": "MASHREQ BANK",
      "MSNX": "THE MEHSANA DISTRICT CENTRAL CO OP BANK LTD.",
      "MUBL": "THE MUNICIPAL CO-OP BANK LTD.",
      "MUPX": "THE MEHMADABAD URBAN PEOPLES CO-OP BANK LTD.",
      "MURX": "THE MURSHIDABAD DISTRICT CENTRAL CO-OP BANK LTD.",
      "MUSX": "THE MUSLIM CO-OPERATIVE BANK LTD.",
      "MVCX": "THE MAHAVEER CO-OPERATIVE BANK LTD.",
      "MVIX": "MANVI PATTANA SOUHARDA SAHAKARI BANK NI",
      "MYAX": "THE MEGHALAYA COOPERATIVE APEX BANK LTD.",
      "MZCX": "MIZORAM URBAN COOPERATIVE DEVELOPMENT BANK LTD.",
      "MZRX": "MIZORAM RURAL BANK",
      "NAGX": "NAGALAND RURAL BANK",
      "NASX": "NASIK DISTRICT CENTRAL CO-OPERATIVE BANK LTD.",
      "NAUX": "THE NAGAUR CENTRAL CO-OPERATIVE BANK LTD.",
      "NAVX": "THE NAVNIRMAN CO-OPERATIVE BANK LTD.",
      "NAWX": "THE NAWANAGAR CO OPERATIVE BANK LTD.",
      "NBBX": "THE NATIONAL CO-OPERATIVE BANK LTD. BANGALORE",
      "NCBL": "THE NATIONAL CO-OPERATIVE BANK LTD.",
      "NCBX": "THE NAWANSHAHR CENTRAL COOPERATIVE BANK LTD.",
      "NCUX": "THE NILAMBUR CO-OPERATIVE URBAN BANK LTD.",
      "NDDX": "NADIA DISTRICT CENTRAL CO OPERATIVE BANK LTD.",
      "NDIX": "NASHIK DISTRICT INDUSTRIAL & MERCANTILE COOP BANK",
      "NGBX": "NAGAR SAHAKARI BANK LTD.MAHARAJGANJ",
      "NGKX": "NAGRIK SAHAKARI BANK MARYADIT GWALIOR",
      "NGRX": "NAGAR SAHKARI BANK LTD.",
      "NGSB": "NAGPUR NAGARIK SAHAKARI BANK LTD.",
      "NGSX": "NAGARIK SAHAKARI BANK MARYADIT DURG",
      "NIDX": "NIDHI CO OPERATIVE BANK LTD.",
      "NILX": "NILKANTH CO OPERATIVE BANK LTD.",
      "NIRX": "NIRMAL URBAN CO OP BANK LTD. NAGPUR",
      "NJCX": "THE NAV JEEVAN CO-OP BANK LTD.",
      "NJGX": "NARMADA JHABUA GRAMIN BANK (Erstwhile Madhya Pradesh Gramin Bank",
      "NJMX": "NASHIK JILLHA MAHILA VIKAS SAHAKARI BANK LTD.",
      "NJSX": "THE NASIK JILHA MAHILA SAHAKARI BANK LTD.",
      "NLGX": "THE NALGONDA DIST. CO-OP. CENTRAL BANK LTD.",
      "NMCB": "THE NASIK MERCHANTS COOPERATIVE BANK LTD.",
      "NNCX": "THE NARODA NAGRIK CO-OPERATIVE BANK LTD.",
      "NNSB": "NUTAN NAGARIK SAHAKARI BANK LTD.",
      "NOSC": "THE BANK OF NOVA SCOTIA",
      "NRDX": "THE NASIK ROAD DEOLALI VYAPARI SAHAKARI BANK LTD.",
      "NSCX": "NAGALAND STATE COOPERATIVE BANK LTD.",
      "NSIX": "NAGRIK SAHAKARI BANK LTD. INDORE",
      "NSMX": "NAGARIK SAMABAY BANK LTD.",
      "NSRX": "NAGRIK SAHAKARI BANK LTD.",
      "NTBL": "THE NAINITAL BANK LIMITED",
      "NUBX": "THE NEW URBAN CO-OPERATIVE BANK LTD. RAMPUR",
      "NUCB": "NAGAR URBAN CO OPERATIVE BANK LTD.",
      "NUCX": "NAVABHARAT CO-OP. URBAN BANK LTD.",
      "NVCX": "NAVANAGARA URBAN CO-OPERATIVE BANK LTD.",
      "NVSX": "NAGAR VIKAS SAHKARI BANK LTD.",
      "ODGB": "ODISHA GRAMYA BANK",
      "OIBA": "DOHA BANK QSC",
      "OMCX": "THE OJHAR MERCHANT'S CO-OP BANK LTD.",
      "ONSX": "OMKAR NAGREEYA SAHKARI BANK LTD.",
      "ORCB": "THE ODISHA STATE CO-OPERATIVE BANK LTD.",
      "OSMX": "OSMANABAD JANATA SAHAKARI BANK LTD.",
      "PABX": "PALLAVAN GRAMA BANK",
      "PADX": "THE PADRA NAGAR NAGRIK SAHAKARI BANK LTD.",
      "PANX": "THE PANCHMAHAL DISTRICT CO OPERATIVE BANK LTD.",
      "PARX": "THE PARBHANI DISTRICT CENTRAL COOP BANK LTD.",
      "PASX": "PASCHIM BANGA GRAMIN BANK",
      "PBGX": "PUDUVAI BHARATHIAR GRAMA BANK",
      "PCBL": "PATAN CO-OPEARTIVE BANK LTD.",
      "PCBX": "PARSHWANATH CO-OPERATIVE BANK LTD.",
      "PCCX": "THE PANCHKULA CENTRAL CO-OPERATIVE BANK LTD.",
      "PCMX": "THE PANCHSHEEL MERCANTILE CO-OP BANK LTD.",
      "PCOX": "OMPRAKASH DEORA PEOPLES CO OP BANK LTD HINGOLI",
      "PCSX": "THE PONDICHERRY STATE CO-OP BANK LTD.",
      "PDSX": "PRIYADARSHANI NAGARI SAHAKARI BANK LTD. JALNA.",
      "PDUX": "THE PANDHARPUR URBAN CO-OP BANK LTD.",
      "PGBX": "PRAGATHI KRISHNA GRAMIN BANK",
      "PGRX": "PROGRESSIVE URBAN CO-OPERATIVE BANK LTD.",
      "PKDX": "THE PALAKKAD DISTRICT CO OP BANK LTD.",
      "PMCX": "THE PIMPALGAON MERCHANTS CO-OP BANK LTD.",
      "PMEC": "PRIME CO-OPERATIVE BANK LTD.",
      "PMNX": "PRAGATI MAHILA NAGRIK SAHAKARI BANK LTD. BHILAI",
      "PNCX": "THE PANIPAT URBAN COOPERATIVE BANK LTD.",
      "PNMX": "PUNE MERCHANT'S CO-OPERATIVE BANK LTD.",
      "PNSX": "POORNAWADI NAGRIK SAHAKARI BANK M.BEED.",
      "PPBX": "PUNE PEOPLE'S CO-OP.BANK LTD. .",
      "PPCX": "THE PACHORA PEOPLES CO-OP. BANK LTD.PACHORA",
      "PREX": "PRERANA CO-OP BANK LTD.",
      "PROX": "PROGRESSIVE MERCANTILE CO-OPERATIVE BANK LTD.",
      "PRPX": "PARASPAR SAHAYAK CO-OP BANK",
      "PSBX": "PRAGATI SAHAKARI BANK LTD.",
      "PSCX": "THE PUNJAB STATE COOPERATIVE BANK LTD.",
      "PTCX": "THE PATIALA CENTRAL COOPERATIVE BANK LTD.",
      "PTNX": "THE PATAN URBAN CO-OP BANK LTD. PATAN",
      "PUBX": "PEOPLES URBAN CO-OPERATIVE BANK LTD.",
      "PUCX": "PUSAD URBAN CO-OP BANK LTD.",
      "PUDX": "PUDUKOTTAI DISTRICT CENTRAL COOPERATIVE BANK LTD.",
      "PUGX": "PUNJAB GRAMIN BANK",
      "PUNX": "PUNE URBAN CO-OPERATIVE BANK LTD.",
      "PURX": "PURVANCHAL GRAMIN BANK",
      "PUSX": "PURASAWALKAM CO-OPERATIVE BANK",
      "PVCX": "PURVANCHAL COOP BANK LTD. GAZIPUR",
      "QUCX": "THE QUILON CO-OPERATIVE URBAN BANK LTD.",
      "RABO": "RABOBANK INTERNATIONAL",
      "RACX": "RAJKOT COMMERCIAL COOPERATIVE BANK LTD.",
      "RAEX": "THE RAILWAY EMPLOYEES COOPERATIVE BANK LTD.",
      "RAJX": "THE RAJSAMAND URBAN CO OP BANK LTD.",
      "RAKX": "RAJKOT PEOPLES COOPERATIVE BANK LTD.",
      "RANX": "THE RANDER PEOPLES COOP BANK LTD.",
      "RAUX": "RAJLAXMI URBAN CO OPERATIVE BANK LTD.",
      "RBBX": "RAJARAMBAPU SAHAKARI BANK LTD. PETH",
      "RCCX": "THE ROPAR CENTRAL COOPERATIVE BANK",
      "RCDX": "THE RAMANATHAPURAM DISTRICT CENTRAL CO OP BANK LTD.",
      "RDCX": "RAIGAD DISTRICT CENTRAL CO-OP BANK LTD.",
      "RDNX": "COL RD NIKAM SAINIK SAHAKARI BANK LTD.",
      "RGSX": "RAJGURUNAGAR SAHAKARI BANK LTD.",
      "RJCX": "RAIGANJ CENTRAL CO OP BANK LTD.",
      "RJTX": "SHRI RAJKOT DISTRICT CO OP BANK LTD.",
      "RLUX": "RANILAXMIBAI URBAN CO-OPERATIVE BANK LTD.",
      "RNGX": "RANGA REDDY COOP URBAN BANK LTD.",
      "RNSB": "RAJKOT NAGARIK SAHAKARI BANK LTD.",
      "RRSX": "RAMRAJYA SAHAKARI BANK LTD.",
      "RSBX": "RAIGAD SAHAKARI BANK LIMITED",
      "RSCB": "THE RAJASTHAN STATE CO-OPERATIVE BANK LTD.",
      "RSSX": "RAJARSHI SHAHU SAHAKARI BANK LTD.",
      "RUCX": "THE RAJASTHAN URBAN COOP BANK LTD.",
      "RUMX": "THE RAIPUR URBAN MERCANTILE CO OP BANK LTD.",
      "RZSX": "RAMPUR ZILA SAHKARI BANK LTD.",
      "SACB": "SHRI ARIHANT CO-OPERATIVE BANK LTD.",
      "SADX": "THE SABARKANTHA DISTRICT CENTRAL COOP BANK LTD.",
      "SAHE": "THE SAHEBRAO DESHMUKH CO-OP. BANK LTD.",
      "SAMX": "SAMATA SAHAKARI BANK LTD.",
      "SARX": "SARDARGANJ MERCANTILE CO OPERATIVE BANK LTD.",
      "SASA": "THE SAHYADRI SAHAKARI BANK LTD.",
      "SASX": "THE S.A.S NAGAR CENTRAL COOPERATIVE BANK LTD.",
      "SATX": "ADV.SHAMRAOJI SHINDE SATYASHODHAK BANK LTD.",
      "SAUX": "THE SAIDAPET CO-OP URBAN BANK LTD.",
      "SAVX": "SARDAR VALLABHBHAI SAHAKARI BANK LTD.",
      "SBCX": "THE SULTAN'S BATTERY CO-OPERATIVE URBAN BANK LTD.",
      "SBLD": "SONALI BANK LIMITED",
      "SBLX": "SHUBHALAKSHMI MAHILA CO OP BANK LTD.",
      "SBNX": "SHREE BHAVNAGAR NAGRIK SAHAKARI BANK LTD.",
      "SBPX": "SARDAR BHILADWALA PARDI PEOPLE'S COOP BANK LTD.",
      "SBUX": "SHREE BALAJI URBAN CO OPERATIVE BANK LTD.",
      "SCBX": "THE SIROHI CENTRAL COOPERATIVE BANK LTD.",
      "SCIX": "THE SOCIAL CO-OPERATIVE BANK LTD.",
      "SCNX": "SHRI CHHANI NAGRIK SAHKARI BANK LTD.",
      "SCPX": "THE SANGRUR CENTRAL CO-OPERATIVE BANK LTD.",
      "SCSX": "SREE CHARAN SOUHARDHA CO-OP BANK LTD.",
      "SCUX": "SUDHA CO-OPERATIVE URBAN BANK LTD.",
      "SDCX": "SINDHUDURG DISTRICT CENTRAL COOPERATIVE BANK LTD.",
      "SDHX": "SOLAPUR SIDDHESHWAR SAHAKARI BANK LTD.",
      "SEWX": "SHRI MAHILA SEWA SAHAKARI BANK LTD.",
      "SGCX": "SANGLI DISTRICT CENTRAL CO-OP BANK LTD.",
      "SGLX": "SANGLI SAHAKARI BANK LTD.",
      "SGSX": "SADGURU NAGRIK SAHAKARI BANK MARYADIT",
      "SHAX": "SHANKAR NAGARI SAHAKARI BANK LTD.",
      "SHBK": "SHINHAN BANK",
      "SHBX": "SHRIRAM URBAN CO-OPERATIVE BANK LTD.",
      "SHCX": "THE SHIMLA URBAN COOP BANK LTD.",
      "SHEX": "SHREE SAMARTH SAHAKARI BANK LTD. NASHIK",
      "SHIX": "SHIVALIK MERCANTILE CO-OP BANK LTD.",
      "SHKX": "SHIKSHAK SAHAKARI BANK LTD.",
      "SHMX": "THE SANGHAMITRA CO OP URBAN BANK LTD.",
      "SHOX": "SIHOR MERCANTILE CO-OPERATIVE BANK LTD.",
      "SHRX": "SHREE MAHESH CO-OPERATIVE BANK LTD. NASHIK",
      "SHSX": "SHARAD SAHAKARI BANK LTD.",
      "SIDX": "SIDDHI CO-OPERATIVE BANK LTD.",
      "SIHX": "SIHOR NAGARIK SAHAKARI BANK LTD.",
      "SKNX": "THE SANKHEDA NAGARIK SAHAKARI BANK LTD.",
      "SKUX": "S S L S A KURUNDWAD URBAN BANK LTD.",
      "SLAX": "SUBHADRA LOCAL AREA BANK LTD.",
      "SLCX": "SHREE LAXMI CO-OPERATIVE BANK LTD. PUNE",
      "SMBC": "SUMITOMO MITSUI BANKING CORPORATION",
      "SMMX": "SHREE MAHALAXMI MERCANTILE COOP BANK LTD. DABHOI",
      "SMNX": "SHREE MAHUVA NAGRIK SAHAKARI BANK LTD.",
      "SMPX": "SHANKARRAO MOHITE PATIL SAHAKRI BANK LTD. AKLUJ",
      "SMUX": "SHRI MAHAVIR URBAN CO-OPERATIVE BANK LTD.",
      "SMVC": "SIR M VISVESVARAYA CO-OPERATIVE BANK LTD.",
      "SMWX": "SREE SUBRAMANYESWARA CO-OPERATIVE BANK LTD.",
      "SNAX": "SARASPUR NAGARIK CO OPERATIVE BANK LTD.",
      "SNCX": "THE SONEPAT URBAN CO-OP.BANK LTD.",
      "SNGX": "THE SARANGPUR CO-OPERATIVE BANK LTD.",
      "SNKX": "SHRAMIK NAGRIK SAHKARI BANK LTD.",
      "SNPX": "THE SONEPAT CENTRAL CO OPERATIVE BANK LTD.",
      "SNSX": "SMRITI NAGRIK SAHAKARI BANK",
      "SOGE": "SOCIETE GENERALE",
      "SOLX": "THE SOLAPUR DISTRICT CENTRAL CO-OP. BANK LTD.",
      "SONX": "SONBHADRA NAGAR SAHKARI BANK LTD.",
      "SPBX": "SAPTAGIRI GRAMEENA BANK",
      "SPCB": "THE SURAT PEOPLE'S CO-OP. BANK LTD.",
      "SPCX": "THE SHIRPUR PEOPLES CO-OP BANK LTD.",
      "SPNX": "SHREE PANCHGANGA NAGARI SAHAKARI BANK LTD.",
      "SPSX": "SANDUR PATTANA SOUHARDA SAHAKARI BANK NIYAMITHA",
      "SPTX": "SHRIPATRAODADA SAHAKARI BANK LTD.",
      "SRCX": "SHREE BHARAT COOP BANK LTD.",
      "SREX": "SHREE COOP BANK LTD.",
      "SRHX": "SHREE DHARATI COOP BANK LTD.",
      "SRSX": "SHARAD NAGARI SAHAKARI BANK LTD.",
      "SSBL": "THE SATARA SHAKARI BANK LTD.",
      "SSBX": "SHIVDAULAT SAHAKARI BANK LTD.",
      "SSHX": "SHREE SHARADA SAHAKARI BANK LTD.",
      "SSKX": "SADHANA SAHAKARI BANK LTD.",
      "SSOX": "SAMARTH SAHAKARI BANK LTD. SOLAPUR",
      "SSSX": "SANT SOPANKAKA SAHAKARI BANK LTD.",
      "SSWX": "SUNDARLAL SAWAJI URBAN CO-OP BANK LTD.",
      "STCB": "SBM BANK (MAURITIUS) LTD.",
      "STCX": "STATE TRANSPORT CO-OP BANK LTD.",
      "SUBX": "SARVA UP GRAMIN BANK",
      "SUCX": "SANGLI URBAN CO-OPERATIVE BANK LTD.",
      "SULX": "SULAIMANI COOP BANK LTD.",
      "SUMX": "THE SURAT MERCANTILE COOP BANK LTD.",
      "SUNB": "SURAT NATIONAL CO-OP. BANK LTD.",
      "SUVX": "SUVARNAYUG SAHAKARI BANK LTD.",
      "SVCX": "SARVODAYA COMMERICAL CO OP BANK LTD.",
      "SVGX": "THE SIVAGANGAI DISTRICT CENTRAL COOP BANK LTD.",
      "SVOX": "THE SARVODAYA SAHAKARI BANK LTD.",
      "SVRX": "SHREE VARDHAMAN SAHAKARI BANK LTD.",
      "SVSX": "SHRI VINAYAK SAHAKARI BANK LTD.",
      "SWSX": "SHREE WARANA SAHAKARI BANK LTD.",
      "TAMX": "THE ANAND MERCANTILE COOPERATIVE BANK LIMITED",
      "TASX": "THE ANNASAHEB SAVANT CO-OP URBAN BANK MAHAD LTD.",
      "TBMX": "THE BAPUNAGAR MAHILA COOP BANK LTD.",
      "TBSX": "THE BIHAR STATE CO OPERATIVE BANK LTD.",
      "TBTX": "THE BARODA TRADERS CO OP BANK LTD.",
      "TCBX": "THE CO-OPERATIVE BANK OF RAJKOT LTD.",
      "TCCX": "THE COMMERCIAL COOPERATIVE BANK LIMITED",
      "TCPX": "THE TAMILNADU CIRCLE POSTAL CO-OP BANK LTD.",
      "TCUX": "TIRUVALLUR CO-OPERATIVE URBAN BANK LIMITED",
      "TDCB": "THE THANE DIST. CENTRAL CO-OP. BANK LTD.",
      "TDCX": "THRISSUR DISTRICT COOPERATIVE BANK LTD.",
      "TDMX": "THE DHANERA MERCANTILE CO OP BANK LTD.",
      "TDPX": "THE THODUPUZHA URBAN COOP BANK LTD.",
      "TDSX": "THE NIZAMABAD DISTRICT CO-OP CENTRAL BANK LTD.",
      "TESX": "THE TEXTILE CO OPERATIVE BANK OF SURAT LTD.",
      "TETX": "TEXTILE TRADERS CO-OPERATIVE BANK LIMITED",
      "TGBX": "TRIPURA GRAMIN BANK",
      "TGCX": "TAMLUK-GHATAL CENTRAL CO-OPERATIVE BANK LTD.",
      "TGNX": "THE GANDHINAGAR NAGRIK COOPERATIVE BANK LTD.",
      "TGUX": "THE GANDHINAGAR URBAN COOP BANK LTD.",
      "THOX": "THE THOOTHUKUDI DISTRICT CENTRAL COOP BANK LTD.",
      "TIDX": "THE THIRUVANNAMALAI DISTRICT CENTRAL COOP BANK LTD.",
      "TIRX": "THE TIRUNELVELI DISTRICT CENTRAL CO-OP BANK LTD.",
      "TJCX": "THANJAVUR CENTRAL CO OP BANK LTD.",
      "TKCX": "THE KAKATIYA COOPERATIVE URBAN BANK LTD.",
      "TKDX": "THE KANNUR DISTRICT CO-OPERATIVE BANK LTD.",
      "TNDC": "THE THIRUVANANTHAPURAM DISTRICT CO-OP BANK LTD.",
      "TNIX": "THE TAMILNADU INDUSTRIAL COOPERATIVE BANK LTD.",
      "TPSX": "TRIPURA STATE COOPERATIVE BANK LTD.",
      "TRAX": "TRANSPORT CO-OPERATIVE BANK LTD.",
      "TRDX": "THE TIRUCHIRAPALLI DIST. CENT COOPERATIVE BANK LTD.",
      "TSCX": "THE SANTRAGACHI CO OPERATIVE BANK LTD.",
      "TSNX": "THE SHORANUR CO OPERATIVE URBAN BANK LTD.",
      "TSUX": "THE SAURASHTRA COOPERATIVE BANK LTD.",
      "TTCX": "THE TARN TARAN CENTRAL COOPERATIVE BANK LTD.",
      "TTLX": "TEXTILE CO-OPERATIVE BANK LTD.",
      "TTUX": "THE TIRUR URBAN COOPERATIVE BANK LTD.",
      "TUBX": "THE TRICHUR URBAN CO-OPERATIVE BANK LTD.",
      "TUCX": "TIRUPATI URBAN CO-OP. BANK LTD.",
      "TUMX": "THE UDAIPUR MAHILA URBAN CO-OP BANK LTD",
      "TUNX": "THE UNION CO-OPERATIVE BANK LTD.",
      "TURX": "THE TURA URBAN COOP BANK LTD.",
      "TVBX": "THE VELLALA CO-OPERATIVE BANK LIMITED",
      "UBBX": "URBAN COOPERATIVE BANK LTD. BASTI",
      "UBGX": "UTTAR BIHAR GRAMIN BANK",
      "UCBX": "URBAN CO-OPERATIVE BANK LTD. BAREILLY",
      "UCCX": "THE UDAIPUR CENTRAL CO-OPERATIVE BANK LTD.",
      "UCDX": "URBAN CO-OPERATIVE BANK LTD. DEHRADUN",
      "UGBX": "UTKAL GRAMEEN BANK",
      "UMAX": "UMA CO OPERATIVE BANK LTD.",
      "UMCX": "THE UMRETH URBAN CO OPERATIVE BANK LTD.",
      "UMSX": "THE UDAIPUR MAHILA SAMRIDHI URBAN CO-OP BANK LTD.",
      "UMUX": "UMIYA URBAN CO OPERATIVE BANK LTD.",
      "UNIX": "THE UNITED CO OPERATIVE BANK LTD.",
      "UNMX": "UNITED MERCANTILE CO OPERATIVE BANK LTD.",
      "UNSX": "THE UNAVA NAGRIK SAHAKARI BANK LTD.",
      "UPCX": "UTTAR PRADESH CO-OPERATIVE BANK LTD.",
      "URCX": "URBAN CO OPERATIVA BANK LTD. SIDDHARTHNAGAR",
      "UROX": "THE URBAN CO-OPERATIVE BANK LTD. ROURKELA",
      "UTCX": "UTTRAKHAND COOPERATIVE BANK LTD.",
      "UTGX": "UTTARAKHAND GRAMIN BANK",
      "UTKX": "UTTARAKHAND STATE COOPERATIVE BANK LTD.",
      "UUCX": "THE UDAIPUR URBAN CO-OP BANK LTD.",
      "VADX": "VALSAD DISTRICT CENTRAL CO-OP BANK LTD.",
      "VASX": "VYAPARIK AUDHYOGIK SAHAKARI BANK KTD",
      "VCAX": "THE VAISH CO OPERATIVE ADARSH BANK LTD.",
      "VCBX": "VISHWAS CO-OP BANK LTD.",
      "VCNB": "THE VAISH CO-OPERATIVE NEW BANK LTD",
      "VCOX": "THE VITA MERCHANTS COOP BANK LTD.",
      "VDCX": "THE VILLUPURAM DISTRICT CENTRAL CO-OP BANK LTD.",
      "VDYX": "VIDYANAND CO-OP. BANK LTD.",
      "VERX": "THE VERAVAL MERCANTILE CO-OPERATIVE BANK LTD.",
      "VGBX": "VANANCHAL GRAMIN BANK erstwhile Jharkhand rajya Gramin Bank",
      "VICX": "VIJAY COMMERCIAL CO OPERATIVE BANK LTD.",
      "VIDX": "VIDYASAGAR CENTRAL CO-OPERATIVE BANK LTD.",
      "VIKX": "VIKRAMADITYA NAGRIK SAHAKARI BANK",
      "VIRX": "THE VIRUDHUNAGAR DISTRICT CENTRAL CO-OP BANK LTD.",
      "VISX": "THE VISAKHAPATNAM CO-OPERATIVE BANK LTD.",
      "VKSX": "VIKAS SAHAKARI BANK LIMITED SOLAPUR",
      "VMCX": "VARDHAMAN (MAHILA) CO-OP. URBAN BANK LTD.",
      "VMMX": "THE VAIJAPUR MERCHANTS COOP BANK LTD.",
      "VMUX": "VIDARBHA MERCHANTS URBAN CO-OP BANK LTD.",
      "VNSX": "VIVEKANAND NAGRIK SAHKARI BANK MYDT",
      "VSBL": "THE VISHWESHWAR SAHAKARI BANK LTD.",
      "VSBX": "VIDYA SAHAKARI BANK LTD.",
      "VSCX": "VIKAS SOUHARDA CO-OPERATIVE BANK LTD.",
      "VUCX": "THE VAIDYANATH URBAN COOP BANK LTD.",
      "VVCX": "THE VALLABH VIDYANAGAR COMMERCIAL BANK LTD.",
      "VVSB": "VASAI VIKAS SAHAKARI BANK LTD.",
      "VYAX": "VYAVSAYAK SAHKARI BANK LTD.",
      "VYPX": "VYAPARI SAHAKARI BANK MARYADIT SOLAPUR",
      "WACX": "THE WAGHODIA URBAN COOP BANK LTD.",
      "WAIX": "THE WAI URBAN CO OP BANK LTD.",
      "WARX": "THE WARANGAL DISTRICT COOPERATIVE CENTRAL BANK LTD.",
      "WAUX": "WARDHAMAN URBAN CO-OPERATIVE BANK LTD. NAGPUR",
      "WBSC": "THE WEST BENGAL STATE CO-OP BANK LTD.",
      "WDCX": "THE WAYANAD DISTRICT CO-OPERATIVE BANK LTD.",
      "WKGX": "VIDHARBHA KOKAN GRAMIN BANK",
      "WUCX": "THE WASHIM URBAN CO-OPERATIVE BANK LTD.",
      "YADX": "YAVATMAL DISTRICT CENTRAL CO-OPERATIVE BANK LTD.",
      "YAVX": "THE YAVATMAL URBAN CO.OP. BANK LTD. YAVATMAL",
      "YCBX": "THE YASHWANT CO-OP BANK LTD.",
      "YLNX": "YADAGIRI LAKSHMI NARSIMHA SWAMY COOP URBAN BANK",
      "ZBBX": "ZILA SAHKARI BANK LTD. BULANDSHAHAR",
      "ZBSX": "MATHURA ZILA SAHKARI BANK LTD. MATHURA",
      "ZCBL": "THE ZOROASTRIAN CO-OPERATIVE BANK LTD.",
      "ZIBX": "ZILA SAHKARI BANK LTD.BAREILLY",
      "ZILX": "ZILA SAHKARI BANK LTD. UNNAO",
      "ZIMX": "ZILA SAHKARI BANK LTD. MIRZAPUR",
      "ZMMX": "ZILA SAHKARI BANK LTD. MORADABAD",
      "ZSAX": "ZILA SAHKARI BANK LTD. MAU",
      "ZSBX": "ZILA SAHAKARI BANK LTD. BIJNOR",
      "ZSJX": "ZILA SAHKARI BANK LTD. JHANSI",
      "ZSLX": "ZILA SAHAKARI BANK LTD. LAKHIMPUR KHERI",
      "ZSMX": "ZILA SAHAKARI BANK LTD. MEERUT",
      "DCNX": "THE DECCAN CO-OPERATIVE URBAN BANK LTD.",
      "TMNX": "THE MAHANAGAR COOPERATIVE URBAN BANK LTD.",
      "DUCX": "THE DAUND URBAN CO-OP BANK LTD.",
      "SNBX": "THE SARVODAYA NAGRIK SAHKARI BANK LTD.",
      "SACX": "THE SARVODAYA COOP BANK LTD. MUMBAI",
      "KNBX": "THE KALOL NAGARIK SAHAKARI BANK LTD.",
      "TJNX": "THE JAMNAGAR MAHILA SAHAKARI BANK LTD.",
      "NPKX": "NASHIK ZILHA SARKARI & PARISHAD KARMACHARI SB NMT",
      "VRDX": "THE VARDHAMAN CO-OP BANK LTD.",
      "RSVX": "RAJARSHI SHAHU GOVT SERVANTS COOPERATIVE BANK KOLH",
      "LKHX": "LAKHIMPUR URBAN COOPERATIVE BANK LTD.",
      "TKTX": "THE KOTTAKKAL COOPERATIVE URBAN BANK LTD.",
      "SMEX": "SUMERPUR MERCANTILE URBAN COOPERATIVE BANK LTD.",
      "GKNX": "THE GANGANAGAR KENDRIYA SAHAKARI BANK LTD.",
      "DSUX": "DHARAMVIR SAMBHAJI URBAN CO-OPERATIVE BANK LTD.",
      "APJX": "AP JANATA COOPERATIVE URBAN BANK LTD.",
      "DYPX": "D.Y.PATIL SAHAKARI BANK LTD. KOLHAPUR",
      "TNUX": "THE NANDURA URBAN COOP BANK LTD. NANDURA",
      "WCBX": "THE WOMEN'S CO-OPERATIVE BANK LTD.",
      "BNBX": "BETUL NAGRIK SAHAKARI BANK MYDT",
      "KKSX": "KUMBHI KASARI SAHKARI BANK LTD. KUDITRE",
      "DHKX": "DHAKURIA CO OP BANK LTD.",
      "SAHX": "SADHANA SAHAKARI BANK LTD. PUNE",
      "LONX": "LONAVALA SAHAKARI BANK LTD.",
      "TNKX": "THE NEELA KRISHNA COOPERATIVE URBAN BANK LTD.",
      "HMNX": "HIMATNAGAR NAGARIK SAHAKARI BANK LTD.",
      "APMX": "THE AP MAHAJAN'S COOPERATIVE URBAN BANK LTD.",
      "DCUX": "THE DARUSSALAM COOPERATIVE URBAN BANK LTD.",
      "VAIX": "VAISHYA SAHAKARI BANK LTD. MUMBAI",
      "SKCX": "SHRIKRISHNA COOPERATIVE BANK LTD. UMRER",
      "SABX": "SARASWATI SAHAKARI BANK LTD.",
      "SDUX": "SRI SUDHA COOPERATIVE BANK LTD.",
      "GNCX": "THE GANDHI COOPERATIVE URBAN BANK LTD.",
      "SNDX": "THE SIND COOPERATIVE URBAN BANK LTD.",
      "PSSX": "THE PRATHAMIK SHIKSHAK SAHAKARI BANK LTD.",
      "RBCX": "RESERVE BANK EMPLOYEES COOPERATIVE BANK LIMITED",
      "AHUX": "AHILYADEVI URBAN COOPERATIVE BANK LIMITED SOLAPUR",
      "TOCX": "THE OTTAPALAM COOPERATIVE URBAN BANK LTD.",
      "JLNX": "THE JALNA PEOPLES COOP BANK LTD. JALNA",
      "BHCX": "THE BHUJ COMMERCIAL CO-OP BANK LTD.",
      "TMAX": "THE MADANAPALLE COOPERATIVE TOWN BANK LTD.",
      "BHTX": "THE BHATKAL URBAN COOPERATIVE BANK LTD.",
      "KCBX": "KUTCH COOPERATIVE BANK LTD.",
      "BKCX": "THE BHAVASARA KSHATRIYA COOPERATIVE BANK LTD.",
      "JTSX": "JUGALKISHOR TAPDIYA SHREE MAHESH UCB AURANGABADLTD.",
      "BODX": "THE BAGALKOT DISTRICT CENTRAL CO-OPERATIVE BANK",
      "TVPX": "THE VERAVAL PEOPLES COOP BANK LTD.",
      "THCX": "THE HOOGHLY COOPERATIVE CREDIT BANK LTD.",
      "ABUX": "ABHINANDAN URBAN COOP BANK AMRAVATI",
      "TNMX": "THE NANDED MERCHANTS COOP BANK LTD. NANDED",
      "KSBX": "KRISHNA SAHAKARI BANK LTD. RETHARE BK",
      "TMTX": "THE MANGALORE COOPERATIVE TOWN BANK LTD.",
      "KSNX": "KOTESHWARA SAHAKARI BANK NIYAMITHA",
      "KNNX": "SRI KANNIKAPARAMESWARI CO-OPERATIVE BANK LIMITED",
      "KHDX": "THE KHEDA PEOPLE'S CO-OPERATIVE BANK LIMITED",
      "PKBX": "THE PANCHKULA URBAN CO-OPERATIVE BANK LMITED",
      "GMCX": "GUJARAT MERCANTILE CO-OPERATIVE BANK LIMITED",
      "NMCX": "NAVI MUMBAI CO-OPERATIVE BANK LIMITED",
      "MUBX": "THE MAHARAJA CO-OPERATIVE URBAN BANK LTD.",
      "TYCX": "SHREE THYAGARAJA CO-OPERATIVE BANK LIMITED",
      "RHMX": "THE RAJ LAXMI MAHILA URBAN COOP BANK LTD. JAIPUR",
      "BOTX": "SHREE BOTAD MERCANTILE COOP BANK LTD.",
      "AMSX": "THE AMBIKA MAHILA SAHAKARI BANK LTD. AHMEDNAGAR",
      "LDPX": "LOKNETE DATTAJI PATIL SAHAKARI BANK LTD.",
      "KESX": "KESHAV SEHKARI BANK LTD.",
      "AJPX": "AMBAJOGAI PEOPLES COOP BANK LTD.",
      "PCPX": "PIMPRI CHINCHWAD SAHAKARI BANK MARYADIT,PIMPRI",
      "BDNX": "BHIND NAGRIK SAHAKARI BANK MYDT",
      "PCTX": "PUNE CANTONMENT SAHAKARI BANK LTD.",
      "TMSX": "THE MODASA NAGARIK SAHKARI BANK LTD.",
      "SHGX": "SHRI GANESH SAHAKARI BANK LTD.",
      "BUBX": "THE BHANDARA URBAN CO OPERATIVE BANK LTD.",
      "VSSX": "VEERASHAIVA SAHAKARI BANK LTD.",
      "KRTX": "THE KRANTHI CO OPERATIVE URBAN BANK LTD.",
      "SBMX": "SRI BANASHANKARI MAHILA COOPERATIVE BANK LTD.",
      "PTSX": "PATAN NAGARIK SAHAKARI BANK LTD.",
      "KHUX": "THE KHAMGAON URBAN COOP BANK LTD.",
      "FMCX": "THE FAIZ MERCANTILE COOPERATIVE BANK LTD.,NASIK",
      "PGCX": "PROGRESSIVE CO-OPERATIVE BANK LIMITED",
      "DOBX": "DAPOLI URBAN CO OP BANK LTD. DAPOLI",
      "NPCX": "THE NADIAD PEOPLES CO OP BANK LTD.",
      "SMBX": "SAMPADA SAHAKARI BANK LTD. PUNE",
      "KHCX": "KHARDAH COOPERATIVE BANK LTD.",
      "ISMX": "INDORE SWAYAM MAHILA CO OP BANK LTD.",
      "SEUX": "THE SEVALIA URBAN CO-OP BANK LTD.",
      "JAUX": "JAIHIND URBAN CO-OP BANK, WAKAD",
      "VANX": "VAISHYA NAGARI SAHAKARI BANK LTD. PARBHANI",
      "MCOX": "MAHESH URBAN CO-OPERATIVE BANK LTD. PARBHANI",
      "VKCX": "VIMA KAMGAR CO OPERATIVE BANK LIMITED",
      "SAPX": "SHRIMANT MALOJIRAJE SAHAKARI BANK LTD., PHALTAN",
      "ESAF": "ESAF SMALL FINANCE BANK LIMITED",
      "MAJX": "MANJERI CO OPERATIVE URBAN BANK LTD.",
      "AUBL": "AU SMALL FINANCE BANK LTD.",
      "SOBX": "THE SECUNDERABAD CO OP URBAN BANK LIMITED",
      "UTKS": "UTKARSH SMALL FINANCE BANK LTD.",
      "FINF": "FINCARE SMALL FINANCE BANK LTD",
      "NESF": "NORTH EAST SMALL FINANCE BANK LTD",
      "FCOX": "DISTRICT CO OP BANK LTD FAIZABAD",
      "NSBB": "NAGARIK SAHAKARI BANK LTD BHIWANDI",
      "TGCG": "THE GOKAK URBAN CO OP CREDIT BANK LTD",
      "TUCL": "THE UNION CO OP BANK LTD MAHINAGAR",
      "SBUJ": "SHRI BHARAT URBAN CO OP BANK LTD JAYSINGPUR",
      "SCOB": "SAMRUDDHI CO OP BANK LTD NAGPUR",
      "TMSC": "THE MYSORE SILK CLOTH MERCHANTS CO OP BANK LTD",
      "NDCB": "THE NAVAL DOCKYARD CO OP BANK LTD",
      "AMSB": "ANNASAHEB MAGAR SAHAKARI BANK MARYADIT",
      "JSFB": "JANA SMALL FINANCE BANK LTD",
      "MKYX": "MARKETYARD COMMERCIAL CO-OPBANK LIMITED"
  }

  $('input[name="bank_isfc_code[]"]').on('input', function() {
    var $this = $(this);
    var ifscCode = $this.val().toUpperCase(); // Ensure the code is in uppercase
    var bankCode = ifscCode.slice(0, 4); // Get the first 4 characters
    console.log(bankCode);
    var bankName = bank_data[bankCode] || ''; // Lookup bank name from the dictionary
    console.log(bank_data);
    $this.closest('.bank-card').find('input[name="bank_name[]"]').val(bankName);
  });


  $("body").on('click', '.add_more_bank', function () {
    var length = $('.bank-card').length;
    var clone = $('.bank-card').first().clone();
    var $checkbox = clone.find('.custom-checkbox input');
    var $label = clone.find('.custom-checkbox label');
    var $delete = clone.find('.delete-bank');
    var newIndex = length + 1;
    $checkbox.attr('name', `refund${newIndex}`);
    $checkbox.attr('id', `inlineRadio${newIndex}`);
    $checkbox.prop('checked', false);
    $label.attr('for', `inlineRadio${newIndex}`);
    $delete.attr('id',null);
    $(clone).find('input, select').val(null);
    $(clone).find('input[name="bank_isfc_code[]"]').on('input', function() {
      var $this = $(this);
      var ifscCode = $this.val().toUpperCase(); // Ensure the code is in uppercase
      var bankCode = ifscCode.slice(0, 4); // Get the first 4 characters
      console.log(bankCode);
      var bankName = bank_data[bankCode] || ''; // Lookup bank name from the dictionary
      console.log(bank_data);
      $this.closest('.bank-card').find('input[name="bank_name[]"]').val(bankName);
  });
    $(clone).bootstrapValidator({
          message: 'This value is not valid',
          feedbackIcons: {
              valid: 'glyphicon glyphicon-ok',
              invalid: 'glyphicon glyphicon-remove',
              validating: 'glyphicon glyphicon-refresh'
          },
          fields: {
              'bank_isfc_code[]': {
                  message: 'IFSC Code is not valid',
                  validators: {
                      notEmpty: {
                          message: 'IFSC Code is required and cannot be empty'
                      },
                      regexp: {
                          regexp: /^[A-Z]{4}[0][A-Z0-9]{6}$/,
                          message: 'The IFSC Code must be 11 characters long with the format: XXXX0YYYYYY'
                      }
                  }
              },
              'bank_name[]': {
                  message: 'Bank Name is not valid',
                  validators: {
                      notEmpty: {
                          message: 'Bank Name is required and cannot be empty'
                      },
                      stringLength: {
                          max: 125,
                          message: 'Bank Name must be less than 125 characters long'
                      }
                  }
              },
              'bank_acount_no[]': {
                  message: 'Bank Account No is not valid',
                  validators: {
                      notEmpty: {
                          message: 'Bank Account No is required and cannot be empty'
                      },
                      regexp: {
                          regexp: /^[a-zA-Z0-9]{1,20}$/,
                          message: 'Bank Account No must be up to 20 characters long and can include letters and numbers'
                      }
                  }
              },
              'bank_acount_type[]': {
                  message: 'Account Type is not valid',
                  validators: {
                      notEmpty: {
                          message: 'Account Type is required and cannot be empty'
                      },
                      regexp: {
                        regexp: /^(SB|CA|CC|OD|NRO|OTH)$/,
                        message: 'Bank Account Type mubs be '
                      }
                  }
              },
              'refund[]': {
                  validators: {
                      choice: {
                          min: 0,
                          max: 1,
                          message: 'Select valid refund option'
                      }
                  }
              }
          }
      }).insertBefore($(this));
  
      $('.refund').on('click', function() {
      // Uncheck all elements with the class 'refund'
      $('.refund').prop('checked', false);
      // Check the clicked element
      $(this).prop('checked', true);
    });
    });
  
    $("body").on('click', '.delete-bank', function (e) {
      e.preventDefault(); 
      if($('.bank-card').length>1){
        $(this).closest('.row').remove();
      }
      else{
        $(this).closest('.row').find('input,select').val(null);
      }
    });

    // $('#other_income_submit').click(function (event) {
    //   event.preventDefault();
    //   $(this).attr('disabled', true);
    //   var formData = $('#otherIncomeForm').serialize();
    //   var year = $('#otherIncomeForm').find('input[name="year"]').val();
    //   $.ajax({
    //     url: API_ENDPOINTS.saveOtherIncome(year),
    //     type: 'post',
    //     data: formData,
    //     success: function (response) {
    //       toastr.options = {
    //         "positionClass": "toast-top-right",
    //         "preventDuplicates": true,
    //         "showDuration": "300",
    //         "hideDuration": "1000",
    //         "timeOut": "5000",
    //         "extendedTimeOut": "1000",
    //         "showEasing": "swing",
    //         "hideEasing": "linear",
    //         "showMethod": "fadeIn",
    //         "hideMethod": "fadeOut"
    //       };
    //       toastr.success(response.message, 'Success', {
    //         "toastClass": "toast-custom-success"
    //       });
    //       console.log(response);
    //       setTimeout(() => {
    //         location.reload();
    //       }, 2000);
    //     },
    //     error: function (xhr, status, error) {
    //       // Display error toast notification
    //       toastr.options = {
    //         "positionClass": "toast-top-right",
    //         "preventDuplicates": true,
    //         "showDuration": "300",
    //         "hideDuration": "1000",
    //         "timeOut": "5000",
    //         "extendedTimeOut": "1000",
    //         "showEasing": "swing",
    //         "hideEasing": "linear",
    //         "showMethod": "fadeIn",
    //         "hideMethod": "fadeOut"
    //       };
    //       toastr.error(response.message, 'Success', {
    //         "toastClass": "toast-custom-success"
    //       });
    //       $(this).removeAttr('disabled');
    //     }
    //   });
    // });

    $('[name="change_year"]').on('change', function () {
      $('#change_year_modal').modal('show');
    })

  });
  function ChangeYear() {
    location.href = '/client-catalog?client_id=1&year=' + $('[name="change_year"]').val();
  }

  document.querySelector('input[name="pin_code"]')?.addEventListener('input', function () {
    const pincode = this.value;

    if (pincode.length === 6) {
      fetch(`/home/get-location-details/${pincode}`)
        .then(response => response.json())
        .then(data => {
          if (data.state && data.district) {
            const stateSelect = document.querySelector('select[name="State"]');
            for (let option of stateSelect.options) {
              if (option.text.toLowerCase() == data.state.toLowerCase()) {
                option.selected = true;
                break;
              }
            }

            document.querySelector('input[name="district"]').value = data.district;
          } else {
            console.error('Pincode not found');
          }
        })
        .catch(error => {
          console.error('Error fetching location details:', error);
        });
    }
  });

  $('input[name="residence_type"]').on('change', function () {
    const type = this.value;

    if (type == 'foreign'){
      $('.pin_code_div').addClass('d-none');
      $('.country_code_div').removeClass('d-none');
      $('.state_code_div').addClass('d-none');
      $('.zip_code_div').removeClass('d-none');
      $('.country_mobile_div').removeClass('d-none');
    }else{
      $('.pin_code_div').removeClass('d-none');
      $('.country_code_div').addClass('d-none');
      $('.state_code_div').removeClass('d-none');
      $('.zip_code_div').addClass('d-none');
      $('.country_mobile_div').addClass('d-none');
    }
  });

  function initializeIfscLookup(ifscClass, bankNameClass) {
    $(document).on('input', ifscClass, function () {
      const ifscCode = $(this).val();
      const ifsc_element = $(this);

      if (ifscCode.length > 0) { // Assuming IFSC code is non-empty
        $.ajax({
          url: `/get-bank-details/${ifscCode}`,
          method: 'GET',
          success: function (data) {
            if (data.bank_name) {
              // Update the bank name input
              $(ifsc_element).closest('.row').find(bankNameClass).val(data.bank_name);
            } else {
              console.error('IFSC code not found');
            }
          },
          error: function (error) {
            console.error('Error fetching bank details:', error);
          }
        });
      }
    });
  }

  // Initialize the IFSC lookup
  $(document).ready(function () {
    initializeIfscLookup('.ifsc_code', '.bankNameClass');
  });


  $("body").on('change', '#OtherSalariesList', function (e) {
    var selected = e.target.value;
    var selected_option = $(e.target).find('option:selected');
    var title = selected_option.text();
    var tab = $(this).data('tab');
    if (selected == 'OTH') {
      $(`<div class="form-group row ml-3 justify-content-between">
          <div class="col-md-6 d-flex justify-content-between">
              <span class="col-md-4" style="font-size:13px;">${title}</span>
              <input type="text" class="form-control rounded-0 col-md-8"
               name="tabs[${tab}][other_salary_narration][]"/>
          </div>
          <div class="col-md-4 d-flex pr-0">
          <span class="text-red col-md-3 ">-</span>
            <div class="col-md-9 pr-0 position-relative">
            <input type="text" class="form-control rounded-0 salary_amount inr_field" 
                name="tabs[${tab}][other_salary_amount][]"/>
                <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
            </div>
          </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_salary_div'));
    } else {
      var previous_year_value = '-';
      if(previousYearSalary[tab] && previousYearSalary[tab].Salary.NatureOfSalaryDtlsType.find(x => x.NatureDesc == selected)){
        previous_year_value = previousYearSalary[tab].Salary.NatureOfSalaryDtlsType.find(x => x.NatureDesc == selected)?.Amount
      }
      $(`<div class="form-group row ml-3 justify-content-between">
          <input id="option_id" type="hidden" value="${selected}" name="tabs[${tab}][salary_type][]" />
          <span class="col-md-6" style="font-size:13px;">${title}</span>
          <div class="col-md-4 d-flex pr-0">
            <span class="text-red col-md-3 ">${previous_year_value}</span>
            <div class="col-md-9 pr-0 position-relative">
            <input type="text" class="form-control rounded-0 salary_amount inr_field" 
                name="tabs[${tab}][salary_amount][]"/>
              <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
            </div>
          </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_salary_div'));
      $(selected_option).addClass('d-none');
    }
    initInrAmount()
    $(e.target).prop('selectedIndex', 0);
  })

  $("body").on('click', '.removeOthIncome', function () {
    var option_id = $(this).closest('.row').find('#option_id').val();
    //Applying the rule 38
    if( option_id == "10(10B)(i)" || option_id == "10(10B)(ii)" || option_id == "10(10C)")
    {
      $(this).closest('.form_grid_acor').find('.other_select').find('option[value="10(10B)(i)"], option[value="10(10B)(ii)"], option[value="10(10C)"]').removeClass('d-none');
    }else{
      $(this).closest('.form_grid_acor').find('.other_select').find('option[value="' + option_id + '"]').removeClass('d-none');
    }
    $(this).closest('.row').remove();
  })

  $("body").on('change', '#OtherPerquisitesList', function (e) {
    var selected = e.target.value;
    var selected_option = $(e.target).find('option:selected');
    var title = selected_option.text();
    var tab = $(this).data('tab');
    if (selected == 'OTH') {
      $(`<div class="form-group row ml-3 justify-content-between">
          <div class="col-md-6 d-flex justify-content-between">
              <span class="col-md-4" style="font-size:13px;">${title}</span>
              <input type="text" class="form-control rounded-0 col-md-8"
               name="tabs[${tab}][other_perquisites_narration][]"/>
          </div>
          <div class="col-md-4 d-flex pr-0">
            <span class="text-red col-md-3 ">-</span>
            <div class="col-md-9 p-0 position-relative">
              <input type="text" class="form-control rounded-0 perquisites_amount inr_field"  name="tabs[${tab}][other_perquisites_amount][]"/>
              <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
            </div>
          </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_perquisites_div'));
    } else {
      var previous_year_value = '-';
      if(previousYearSalary[tab] && previousYearSalary[tab].Perquisites.NatureOfPerquisitesType.find(x => x.NatureDesc == selected)){
        previous_year_value = previousYearSalary[tab].Perquisites.NatureOfPerquisitesType.find(x => x.NatureDesc == selected)?.Amount
      }
      $(`<div class="form-group row ml-3 justify-content-between">
          <input id="option_id" type="hidden" value="${selected}" name="tabs[${tab}][perquisites_type][]" />
          <span class="col-md-6" style="font-size:13px;">${title}</span>
          <div class="col-md-4 d-flex pr-0">
            <span class="text-red col-md-3">${previous_year_value}</span>
          <div class="col-md-9 p-0 position-relative">
          <input type="text" class="form-control rounded-0 perquisites_amount inr_field" 
               name="tabs[${tab}][perquisites_amount][]"/>
             <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
             </div>
            </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_perquisites_div'));
      $(selected_option).addClass('d-none');
    }
    initInrAmount()
    $(e.target).prop('selectedIndex', 0);
  })

  $("body").on('change', '#OtherProfitsList', function (e) {
    var selected = e.target.value;
    var selected_option = $(e.target).find('option:selected');
    var title = selected_option.text();
    var tab = $(this).data('tab');
    if (selected == 'OTH') {
      $(`<div class="form-group row ml-3 justify-content-between">
          <div class="col-md-6 d-flex justify-content-between">
              <span class="col-md-4" style="font-size:13px;">${title}</span>
              <input type="text" class="form-control rounded-0 col-md-8"
               name="tabs[${tab}][other_profit_narration][]"/>
          </div>
          <div class="col-md-4 d-flex pr-0">
            <span class="text-red col-md-3 ">-</span>
          <div class="col-md-9 p-0 position-relative">
          <input type="text" class="form-control rounded-0 profit_amount inr_field" 
               name="tabs[${tab}][other_profit_amount][]"/>
              <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
            </div>
            </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_profit_div'));
    } else {
      var previous_year_value = '-';
      if(previousYearSalary[tab] && previousYearSalary[tab].Profit.NatureOfProfitInLieuOfSalaryType.find(x => x.NatureDesc == selected)){
        previous_year_value = previousYearSalary[tab].Profit.NatureOfProfitInLieuOfSalaryType.find(x => x.NatureDesc == selected)?.Amount
      }
      $(`<div class="form-group row ml-3 justify-content-between">
          <input id="option_id" type="hidden" value="${selected}" name="tabs[${tab}][profit_type][]" />
          <span class="col-md-6" style="font-size:13px;">${title}</span>
          <div class="col-md-4 d-flex pr-0">
            <span class="text-red col-md-3 ">${previous_year_value}</span>
          <div class="col-md-9 p-0 position-relative">
          <input type="text" class="form-control rounded-0 profit_amount inr_field" 
               name="tabs[${tab}][profit_amount][]"/>
             <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
            </div>
            </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_profit_div'));
      $(selected_option).addClass('d-none');
    }
    initInrAmount()
    $(e.target).prop('selectedIndex', 0);
  })
  
  $("body").on('change', '#OtherExemptList', function (e) {
    var selected = e.target.value;
    var selected_option = $(e.target).find('option:selected');
    //Applying the rule 38
    if( selected == "10(10B)(i)" || selected == "10(10B)(ii)" || selected == "10(10C)")
    {
      $(e.target).find('option[value="10(10B)(i)"], option[value="10(10B)(ii)"], option[value="10(10C)"]').addClass('d-none');
    }
    var title = selected_option.text();
    var tab = $(this).data('tab');
    if (selected == 'OTH') {
      $(`<div class="form-group row ml-3 justify-content-between">
          <div class="col-md-6 d-flex justify-content-between">
              <span class="col-md-4" style="font-size:13px;">${title}</span>
              <input type="text" class="form-control rounded-0 col-md-8"
               name="tabs[${tab}][other_exempt_narration][]"/>
          </div>
          <div class="col-md-4 d-flex pr-0">
            <span class="text-red col-md-3 ">-</span>
          <div class="col-md-9 p-0 position-relative">
          <input type="text" class="form-control rounded-0 exempt_amount inr_field" 
               name="tabs[${tab}][other_exempt_amount][]"/>
              <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
              </div>
              </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_exempt_div'));
    } else {
      var previous_year_value = '-';
      if(previousYearSalary[tab] && previousYearSalary[tab].AllwncExemptUs10.AllwncExemptUs10Dtls.find(x => x.NatureDesc == selected)){
        previous_year_value = previousYearSalary[tab].AllwncExemptUs10.AllwncExemptUs10Dtls.find(x => x.NatureDesc == selected)?.Amount
      }
      $(`<div class="form-group row ml-3 justify-content-between">
          <input id="option_id" type="hidden" value="${selected}" name="tabs[${tab}][exempt_type][]" />
          <span class="col-md-6" style="font-size:13px;">${title}</span>
          <div class="col-md-4 d-flex pr-0">
            <span class="text-red col-md-3 ">${previous_year_value}</span>
          <div class="col-md-9 p-0 position-relative">
          <input type="text" class="form-control rounded-0 exempt_amount inr_field" 
               name="tabs[${tab}][exempt_amount][]"/>
             <a class="removeOthIncome remove-btn"><i class="fas fa-times"></i></a> 
             </div>
             </div>
      </div>`).insertBefore($(this).closest('.tab-content').find('.add_exempt_div'));
      $(selected_option).addClass('d-none');
    }
    initInrAmount()
    $(e.target).prop('selectedIndex', 0);
  })

  $("body").on('keyup', '.salary_amount', function (e) {
    var value = 0;
    $(this).closest('.accordion-item').find('.salary_amount').each(function () {
      value += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    })

    var perquisite_total = parseInt($(this).closest('.tab-content').find('.total_perquisites').val().replace(/,/g, '')) || 0;
    var profit_total = parseInt($(this).closest('.tab-content').find('.total_profit').val().replace(/,/g, '')) || 0;

    var grand_total = value + perquisite_total + profit_total;
    console.log(value ,'+',perquisite_total,'+',profit_total,'+',grand_total)
    $(this).closest('.tab-content').find('.deduction16ia').val(Number(Math.min(grand_total,50000)).toLocaleString('en-in')).trigger('keyup')
    $(this).closest('.accordion-item').find('.total_salary').val(Number(value).toLocaleString('en-in'));
  })

  $("body").on('keyup', '.perquisites_amount', function (e) {
    var value = 0;
    $(this).closest('.accordion-item').find('.perquisites_amount').each(function () {
      value += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    })
    var salary_total = parseInt($(this).closest('.tab-content').find('.total_salary').val().replace(/,/g, '')) || 0;
    var profit_total= parseInt($(this).closest('.tab-content').find('.total_profit').val().replace(/,/g, '')) || 0;

    var grand_total = value + salary_total + profit_total;
    console.log($(this).closest('.tab-content').find('.deduction16ia'),'==============',grand_total)
    $(this).closest('.tab-content').find('.deduction16ia').val(Number(Math.min(grand_total,50000)).toLocaleString('en-in')).trigger('keyup')
    $(this).closest('.accordion-item').find('.total_perquisites').val(Number(value).toLocaleString('en-in'));
  })

  $("body").on('keyup', '.profit_amount', function (e) {
    var value = 0;
    $(this).closest('.accordion-item').find('.profit_amount').each(function () {
      value += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    })
    var salary_total = parseInt($(this).closest('.tab-content').find('.total_salary').val().replace(/,/g, '')) || 0;
    var perquisite_total= parseInt($(this).closest('.tab-content').find('.total_perquisites').val().replace(/,/g, '')) || 0;

    var grand_total = value + perquisite_total + salary_total;
    console.log($(this).closest('.tab-content').find('.deduction16ia'),'==============',grand_total)
    $(this).closest('.tab-content').find('.deduction16ia').val(Number(Math.min(grand_total,50000)).toLocaleString('en-in')).trigger('keyup')
    $(this).closest('.accordion-item').find('.total_profit').val(Number(value).toLocaleString('en-in'));
  })

  $("body").on('keyup', '.exempt_amount', function (e) {
    var value = 0;
    $(this).closest('.accordion-item').find('.exempt_amount').each(function () {
      value += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    })
    console.log($(this).closest('.accordion-item'))
    $(this).closest('.accordion-item').find('.total_exempt').val(Number(value).toLocaleString('en-in'));
  })

  $("body").on('keyup', '.deduction_amount', function (e) {
    var value = 0;
    $(this).closest('.accordion-item').find('.deduction_amount').each(function () {
      value += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    })
    console.log($(this).closest('.accordion-item'))
    $(this).closest('.accordion-item').find('.total_deduction').val(Number(value).toLocaleString('en-in'));
  })

  // $('.salary_form_submit').on('click', function (e) {
  //   e.preventDefault();
  //   console.log($('.salary_form').find('input[name="tab"]'))
  //   $('.salary_form').find('input[name="tab"]').val('house_property');
  //   SalaryformSubmit();
  // });
  // $("body").on('submit', '.salary_form', function (e) {
  //   e.preventDefault();
  //   SalaryformSubmit();
  // })
  function SalaryformSubmit() {
    // var formData = $('.salary_form').serialize();
    $('.salary_form').find('input.inr_field').each(function(){
      let value = $(this).val()
      $(this).val(value.replace(/,/g, ''));
    })
    var formData = new FormData($('.salary_form')[0]);
    console.log(formData)
    var year = $('#otherIncomeForm').find('input[name="year"]').val();
    $.ajax({
      url: API_ENDPOINTS.saveSalaryData(year),
      type: 'post',
      data: formData,
      contentType: false,
      processData: false,  
      success: function (response) {
        toastr.options = {
          "positionClass": "toast-top-right",
          "preventDuplicates": true,
          "showDuration": "300",
          "hideDuration": "1000",
          "timeOut": "5000",
          "extendedTimeOut": "1000",
          "showEasing": "swing",
          "hideEasing": "linear",
          "showMethod": "fadeIn",
          "hideMethod": "fadeOut"
        };
        toastr.success(response.message, 'Success', {
          "toastClass": "toast-custom-success"
        });
        if (!response.no_redirect) {
          // setTimeout(() => {
          //   location.reload();
          // }, 2000);
        }
        console.log(response);
      },
      error: function (xhr, status, error) {
        // Display error toast notification
        toastr.options = {
          "positionClass": "toast-top-right",
          "preventDuplicates": true,
          "showDuration": "300",
          "hideDuration": "1000",
          "timeOut": "5000",
          "extendedTimeOut": "1000",
          "showEasing": "swing",
          "hideEasing": "linear",
          "showMethod": "fadeIn",
          "hideMethod": "fadeOut"
        };
        toastr.error(response.message, 'Success', {
          "toastClass": "toast-custom-success"
        });
        // $(this).removeAttr('disabled');
      }
    });
  }

  document.addEventListener("input", function (e) {
    const target = e.target.classList.contains('pincode'); // Or any other selector.

    if (target) {
      const pincode = e.target.value;
      if (pincode.length === 6) {
        fetch(`/home/get-location-details/${pincode}`)
          .then(response => response.json())
          .then(data => {
            if (data.state && data.district) {
              const stateSelect = e.target.closest(".row").querySelector('.state_code');
              for (let option of stateSelect.options) {
                if (option.text.toLowerCase() == data.state.toLowerCase()) {
                  option.selected = true;
                  break;
                }
              }

              e.target.closest(".row").querySelector('.city').value = data.district;
            } else {
              console.error('Pincode not found');
            }
          })
          .catch(error => {
            console.error('Error fetching location details:', error);
          });
      }
    }
  });

  $('body').on('click', '.remove_business', function () {
    if($(this).closest('.card-body').find('.business_list').length == 1){
      $(this).closest('.business_list').find('input,select').val(null).trigger('change');;
    }else{
      $(this).closest('.row').remove();
    }
  })
  $('body').on('click', '.add_more_business', function () {
    var clone = $(this).closest('.card-body').find('.business_list').first().clone();
    $('.custom-select2').find('select').first().select2({
      ajax: {
        url: '/home/getBusinessName',
        dataType: 'json',
        // delay: 250,
        data: function (params) {
          return {
            q: params.term, // search term
            type: $(this).data('type')
          };
        },
        processResults: function (data) {
          return {
            results: data
          };
        },
        cache: true
      },
      selectOnClose: true,
      selectOnSearch: true
    });


    $(clone).find('.select2-container').remove()
    $(clone).find('input,select').val(null)
    $(clone).find('select').select2({
      ajax: {
        url: '/home/getBusinessName',
        dataType: 'json',
        // delay: 250,
        data: function (params) {
          return {
            q: params.term, // search term
            type: $(this).data('type')
          };
        },
        processResults: function (data) {
          return {
            results: data
          };
        },
        cache: true
      },
      selectOnClose: true,
      selectOnSearch: true
    });
    $(clone).bootstrapValidator({
      message: 'This value is not valid',
      feedbackIcons: {
        valid: 'glyphicon glyphicon-ok',
        invalid: 'glyphicon glyphicon-remove',
        validating: 'glyphicon glyphicon-refresh'
      },
      fields: {
        'codeAD[]': {
            message: 'The Nature of Business is not valid',
            validators: {
                notEmpty: {
                    message: 'The Nature of Business is required and cannot be empty'
                },
                stringLength: {
                    min: 1,
                    max: 7,
                    message: 'The Nature of Business code must be between 1 and 5 characters long'
                },
                regexp: {
                    regexp: /^(0\d{4}|[1-9]\d{4})(_\d)?$/, 
                    message: 'The Nature of Business code must be a 5-digit number'
                }
            }
        },
        'NameOfBusinessAD[]': {
            message: 'The Name of Business is not valid',
            validators: {
                notEmpty: {
                    message: 'The Name of Business is required and cannot be empty'
                },
                stringLength: {
                    min: 1,
                    max: 75,
                    message: 'The Name of Business must be between 1 and 75 characters long'
                }
            }
        },
        'descriptionAD[]': {
            message: 'The Description is not valid',
            validators: {
                stringLength: {
                    max: 75,
                    message: 'The Description must be less than 75 characters long'
                }
            }
        },
        'codeADA[]': {
            message: 'The Nature of Business code is not valid',
            validators: {
                notEmpty: {
                    message: 'The Nature of Business code is required and cannot be empty'
                },
                regexp: {
                    regexp: /^(0\d{4}|[1-9]\d{4})(_\d)?$/, 
                    message: 'The Nature of Business code must be a valid code from the predefined list'
                },
                stringLength: {
                    min: 5,
                    max: 7,
                    message: 'The Nature of Business code must be between 5 and 7 characters long'
                }
            }
        },

        'NameOfBusinessADA[]': {
            message: 'The Name of Business is not valid',
            validators: {
                notEmpty: {
                    message: 'The Name of Business is required and cannot be empty'
                },
                stringLength: {
                    min: 1,
                    max: 75,
                    message: 'The Name of Business must be between 1 and 75 characters long'
                }
            }
        },
        'descriptionADA[]': {
            message: 'The Description is not valid',
            validators: {
                stringLength: {
                    max: 75,
                    message: 'The Description must be less than 75 characters long'
                }
            }
        },
        'codeAE[]': {
            message: 'The Nature of Business code is not valid',
            validators: {
                notEmpty: {
                    message: 'The Nature of Business code is required and cannot be empty'
                },
                regexp: {
                    regexp: /^(08001|11002|11008|11010|11011|11012|11015)$/,
                    message: 'The Nature of Business code must be one of the predefined codes'
                },
                stringLength: {
                    min: 5,
                    max: 5,
                    message: 'The Nature of Business code must be exactly 5 characters long'
                }
            }
        },
        'NameOfBusinessAE[]': {
            message: 'The Name of Business is not valid',
            validators: {
                notEmpty: {
                    message: 'The Name of Business is required and cannot be empty'
                },
                stringLength: {
                    min: 1,
                    max: 75,
                    message: 'The Name of Business must be between 1 and 75 characters long'
                }
            }
        },
        'descriptionAE[]': {
            message: 'The Description is not valid',
            validators: {
                stringLength: {
                    max: 75,
                    message: 'The Description must be less than 75 characters long'
                }
            }
        }
      }
  });
  $(clone).insertBefore($(this));
  });

  $('body').on('click', '.removeCrypto', function () {
    if($('.crypto-asset').length == 1){
      $(this).closest('.crypto-asset').find('input,select').val(null);
    }else{
      $(this).closest('tr').remove();
    }
  });

  function formatInput(value) {
    return value
        .replace(/^(\d\d)(\d)$/g, '$1/$2')
        .replace(/^(\d\d\/\d\d)(\d+)$/g, '$1/$2')
        .replace(/[^\d\/]/g, '')
        .replace(/(\/\/)/g, '/');
  }

  $('body').on('click', '.add_more_vda_btn', function () {
    var clone = $('.vda_table tbody').find('.crypto-asset').clone()[0];
    console.log(clone.html);
    $(clone).find('input,select').val(null)
    $(clone).find('input[name="gains[]"]').css("background-color","Inherit","!important;");
    $('.vda_table tbody').append(clone);

    $(".date-input").on('input', function() {
      this.value = formatInput(this.value);
    });

    $(function(){
      $('input[name="buy_value[]"]').on('input',function(){
          var buy_value = $(this).val()
          var sell_value = $(this).closest('tr').find('input[name="sell_value[]"]').val()
          var profit = Number(sell_value) - Number(buy_value)
          if(profit < 0){
              $(this).closest('tr').find('input[name="gains[]"]').css("background-color","#dc3545","!important;");
          }else{
              $(this).closest('tr').find('input[name="gains[]"]').css("background-color","Inherit","!important;");
          }
          var sell_value = $(this).closest('tr').find('input[name="gains[]"]').val(profit)
          
      });
  });

  $(function(){
      $('input[name="sell_value[]"]').on('input',function(){
          var sell_value = $(this).val()
          var buy_value = $(this).closest('tr').find('input[name="buy_value[]"]').val()
          var profit = Number(sell_value) - Number(buy_value)
          if(profit<0){
              $(this).closest('tr').find('input[name="gains[]"]').css("background-color","#dc3545","!important;");
          }else{
              $(this).closest('tr').find('input[name="gains[]"]').css("background-color","Inherit","!important;");
          }
          var sell_value = $(this).closest('tr').find('input[name="gains[]"]').val(profit)
      });
  });
  });

  // $('body').on('click', '.remove-btn-80ggc', function () {
  //   if($('.80ggc').length == 1){
  //     $(this).closest('.80ggc').find('input,select').val('');
  //   }else{
  //     $(this).closest('.80ggc').remove();
  //   }
  // })
  // $('body').on('click', '.add_80ggc', function () {
  //   var clone = $('.80ggc').clone()[0];
  //   console.log(clone);
  //   $(clone).find('input,select').val('')
  //   $(clone).insertBefore($('.80ggc_btn'));
  // });

  // $('body').on('click', '.remove-btn-80g_donation', function () {
  //   if($('.80g_donation').length == 1){
  //     $(this).closest('.80g_donation').find('input,select').val('');
  //   }else{
  //     $(this).closest('.80g_donation').remove();
  //   }
  // })
  // $('body').on('click', '.add_80g_donation', function () {
  //   var clone = $('.80g_donation').clone()[0];
  //   $(clone).removeClass('80g_donation_div').removeClass('d-none').addClass('80g_donation');
  //   $(clone).find('input,select').val('')
  //   $(clone).insertBefore($('.80g_donation_btn'));
  // });
  function formatCurrency(value) {
    value = parseInt(value, 10);
    if (isNaN(value)) {
        return value;
    }
  
    let valueStr = value.toString().split('').reverse().join('');
    let parts = [];
    parts.push(valueStr.substring(0, 3));
    valueStr = valueStr.substring(3);
  
    while (valueStr.length > 0) {
        parts.push(valueStr.substring(0, 2));
        valueStr = valueStr.substring(2);
    }
  
    let indianCurrencyStr = parts.join(',').split('').reverse().join('');
    return indianCurrencyStr;
  }

  $('.revenue_input').on('input', function () {
    var total_gross = 0;
    $('.revenue_input').each(function () {
      total_gross += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    });

    $('.gross_revenue').text(formatCurrency(total_gross));
  });

  $('.income_input').on('input', function () {
    var total_inc = 0;
    $('.income_input').each(function () {
      total_inc += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    });

    $('#total_profit_44ad').text(formatCurrency(total_inc));
  });

  var is_typed_44ad_profit_cash = false;

  $('#revenue-via-cash-44AD').on('input',function(){
    if(!is_typed_44ad_profit_cash){
      var value = $('#revenue-via-cash-44AD').val().replace(/,/g, '');
      console.log("i am called bro static");
      console.log($('#revenue-via-cash-44AD').val());
      // console.log(value);
      $('#profit-via-cahs-44AD').val(Number(Math.round(value*8/100)).toLocaleString('en-in'));

      var total_inc = 0;
      $('.income_input').each(function () {
        total_inc += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : "";
      });

      $('#total_profit_44ad').text(formatCurrency(total_inc));
    }
  });
  // $('#profit-via-cahs-44AD').on('keyup', function(){
  //   var value = parseInt($('#revenue-via-cash-44AD').val().replace(/,/g, ''));
  //   var resultant = value*8/100;
  //   var current = parseInt($(this).val());
  //   if (current<resultant){
  //     document.getElementById('submitbtn').disabled = true;
  //   }
  // });
  // $('#profit-via-other-44AD').on('keyup', function(){
  //   var value = parseInt($('#revenue-via-other-44AD').val().replace(/,/g, ''));
  //   var resultant = value*8/100;
  //   var current = parseInt($(this).val());
  //   if (current<resultant){
  //     document.getElementById('submitbtn').disabled = true;
  //   }
  // });
  // $('#profit-via-bank-44AD').on('keyup', function(){
  //   var value = parseInt($('#revenue-via-bank-44AD').val().replace(/,/g, ''));
  //   var resultant = value*6/100;
  //   var current = parseInt($(this).val());
  //   if (current<resultant){
  //     document.getElementById('submitbtn').disabled = true;
  //   }
  // });

  $('#json_file').on('change', function(){
    let fileinput = document.getElementById('json_file');
    let filenamedisplay = document.getElementById('filename_picked');
    if(fileinput.files.length > 0){
      let filename = fileinput.files[0].name;
      filenamedisplay.textContent = filename;
    }
  });

  $('.refund').on('click', function() {
    // Uncheck all elements with the class 'refund'
    $('.refund').prop('checked', false);
    // Check the clicked element
    $(this).prop('checked', true);
  });

  
  $('#profit-via-cahs-44AD').on('input',function(){
    is_typed_44ad_profit_cash = true;
  });

  var is_typed_44ad_profit_other = false;
  

  $('#revenue-via-other-44AD').on('input',function(){
    if(!is_typed_44ad_profit_other){
      var value = $('#revenue-via-other-44AD').val().replace(/,/g, '');
      console.log("i am called bro");
      $('#profit-via-other-44AD').val(Number(Math.round(value*8/100)).toLocaleString('en-in'));

      var total_inc = 0;
      $('.income_input').each(function () {
        total_inc += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : "";
      });

      $('#total_profit_44ad').text(formatCurrency(total_inc));
    }
  });

  $('#profit-via-other-44AD').on('input',function(){
    is_typed_44ad_profit_other = true;
  });

  var is_typed_44ad_profit_bank = false;

  $('#revenue-via-bank-44AD').on('input',function(){
    if(!is_typed_44ad_profit_bank){
      var value = $('#revenue-via-bank-44AD').val().replace(/,/g, '');
      console.log("i am called bro");
      $('#profit-via-bank-44AD').val(Number(Math.round(value*6/100)).toLocaleString('en-in'));

      var total_inc = 0;
      $('.income_input').each(function () {
        total_inc += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
      });

      $('#total_profit_44ad').text(formatCurrency(total_inc));
    }
  });

  $('#profit-via-bank-44AD').on('input',function(){
    is_typed_44ad_profit_bank = true;
  });


  $('.revenue_input_44ada').on('input', function () {
    var total_gross = 0;
    $('.revenue_input_44ada').each(function () {
      total_gross += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    });

    $('.gross_revenue_44ada').text(Number(total_gross).toLocaleString('en-in'));

    var total_inc = (total_gross / 2).toFixed(0)
    $('.total_income_44ada').val(Number(total_inc).toLocaleString('en-in'));
    $('.total_expense_44ada').val(Number(total_gross - total_inc).toLocaleString('en-in'));
    // $('.total_income_busi_44ada').text(total_gross / 2);
  });

  $('.vehicle_row_input').on('change',function(){
    if(!is_typed_44ad_profit_bank){
      var value = $(this).val();
      console.log("i am called bro");
      $(this).val(Number(Math.round(value)).toLocaleString('en-in'));
    }
  });

  $('#totalincomeadda').on('keyup',function(){
    console.log('on change working');
    var value = parseInt($(this).val());
    var revenuebank = parseInt($('#revbandnokeadda').val());
    var revenueother = parseInt($('#revenueothher').val());
    var revenuecash = parseInt($('#revenuecash').val());
    var sumofall = revenuecash + revenueother + revenuebank;
    if(value<(sumofall*0.5)){
        document.getElementById('incomeaddasubmit').disabled = true;
    }
    // if (tonnage>=12){
    //   income = tonnage * 1000 * value;

    // }
});

  $('.total_income_44ada').on('input', function () {
    var total_inc = $('.total_income_44ada').val().replace(/,/g, '');

    var total_gross = 0;
    $('.revenue_input_44ada').each(function () {
      total_gross += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    });

    var total_exp = Math.max(0, Math.min(total_gross - (total_gross / 2).toFixed(0), total_gross - total_inc))

    $('.total_expense_44ada').val(Number(total_exp).toLocaleString('en-in'))

    $('.total_income_busi_44ada').text(Number(total_inc).toLocaleString('en-in'));

  });

  $('#vehicle_income_table').on('input', 'tr:last td input', function () {
    var clone = $('#vehicle_income_table').find('tr').clone()[1];
    $(clone).find('input,select').val(null)
    $(clone).bootstrapValidator({
      message: 'This value is not valid',
      feedbackIcons: {
          valid: 'glyphicon glyphicon-ok',
          invalid: 'glyphicon glyphicon-remove',
          validating: 'glyphicon glyphicon-refresh'
      },
      fields: {
        'RegNumberGoodsCarriage[]': {
            message: 'Registration Number is not valid',
            validators: {
                notEmpty: {
                    message: 'Registration Number is required'
                },
                stringLength: {
                    min: 1,
                    max: 11,
                    message: 'Registration Number must be between 1 and 11 characters long'
                }
            }
        },
        'TonnageCapacity[]': {
            message: 'Tonnage Capacity is not valid',
            validators: {
                notEmpty: {
                    message: 'Tonnage Capacity is required'
                },
                numeric: {
                    message: 'Tonnage Capacity must be a number'
                },
                between: {
                    min: 0,
                    max: 100,
                    message: 'Tonnage Capacity must be between 0 and 100'
                }
            }
        },
        'HoldingPeriod[]': {
            message: 'Holding Period is not valid',
            validators: {
                notEmpty: {
                    message: 'Holding Period is required'
                },
                integer: {
                    message: 'Holding Period must be an integer'
                },
                between: {
                    min: 1,
                    max: 12,
                    message: 'Holding Period must be between 1 and 12'
                }
            }
        },
        'OwnedLeasedHiredFlag[]': {
            message: 'Ownership status is not valid',
            validators: {
                notEmpty: {
                    message: 'Ownership status is required'
                },
                choice: {
                    min: 1,
                    max: 1,
                    values: ['OWN', 'LEASE', 'HIRED'],
                    message: 'Ownership status must be either OWN, LEASE, or HIRED'
                }
            }
        },
        'PresumptiveIncome[]': {
            message: 'Presumptive Income is not valid',
            validators: {
                notEmpty: {
                    message: 'Presumptive Income is required'
                },
                callback: {
                    message: 'Profit via any other mode must be a number between 7,500 and 99,999,999,999,999',
                    callback: function(value, validator, $field) {
                        value = value.replace(/,/g, '');
                        var number = parseFloat(value);
                        return !isNaN(number) && number >= 7500 && number <= 99999999999999;
                    }
                },
            }
        }
      }
    });

    $('#vehicle_income_table').append(clone);

    // var newRow = '<tr>';
    // $(this).parents('tr').find('td').each(function () {
    //   const inputHtml = $(this).find('input,select,i').clone().prop('outerHTML');

    //   newRow += `<td>${inputHtml}</td>`;
    // });
    // newRow += '</tr>';
    
    // $('#vehicle_income_table').append(newRow);
    

    initInrAmount()

  });

  $("body").on("click", ".remove_vehile", function () {
    if($('#vehicle_income_table tr').length > 2){
      $(this).closest('tr').remove()
    }
  })

  $('.liability_input').on('input', function () {
    var total = 0;
    $('.liability_input').each(function () {
      total += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    });

    $('.liability_total').val(Number(total).toLocaleString('en-in'));
    var assetTotal = parseInt($('.asset_total').val().replace(/,/g, '') || 0);
    var difference = total - assetTotal;
    $('.asset_libiality_difference').val(isNaN(difference) ? 0 : Number(difference).toLocaleString('en-in'));
  });

  $('.asset_input').on('input', function () {
    var total = 0;
    $('.asset_input').each(function () {
      total += $(this).val() ? parseInt($(this).val().replace(/,/g, '')) : 0;
    });

    $('.asset_total').val(Number(total).toLocaleString('en-in'));
    var liabilityTotal = parseInt($('.liability_total').val().replace(/,/g, '') || 0);
    var difference = liabilityTotal - total;
    $('.asset_libiality_difference').val(isNaN(difference) ? 0 : Number(difference).toLocaleString('en-in'));
  });

  $("body").on("change", ".co-owner-check", function () {
    if (this.checked) {
      var index = $(this).closest('.tab-content').data('tab');
      $(this).closest('.tab-content').find('.co-owner-div').removeClass('d-none');
      $(this).closest('.tab-content').find('.co-owner-div').find('.co-owner-table tbody').html(`<tr>
          <td>
              <div class="form-group">
                  <label class="m-0">Name of Co-Owners</label>
                  <input type="text" class="form-control rounded-0" name="tabs[${index}][NameCoOwner][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">PAN of Co-Owners</label>
                  <input type="text" class="form-control rounded-0" name="tabs[${index}][PAN_CoOwner][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">Aadhaar of Co-Owners</label>
                  <input type="number" class="form-control rounded-0" name="tabs[${index}][Aadhaar_CoOwner][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">Percentage Share</label>
                  <input type="number" class="form-control rounded-0 co-owner-share" name="tabs[${index}][PercentShareProperty][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group d-flex" style="flex-direction: column">
                  <label class="m-0">Cancel</label>
                  <div class="cancel btn btn-danger">
                      <i class="fas fa-trash"></i>
                  </div>
              </div>
          </td>
      </tr>`);
    } else {
      $(this).closest('.tab-content').find('.co-owner-div').addClass('d-none');
      $(this).closest('.tab-content').find('.owner_share').val(100);
    }
  });

  $("body").on("click", ".add-co-owner", function () {
    var index = $(this).closest('.tab-content').data('tab');
    $(this).closest('.tab-content').find('.co-owner-div').find('.co-owner-table tbody').append(`<tr>
          <td>
              <div class="form-group">
                  <label class="m-0">Name of Co-Owners</label>
                  <input type="text" class="form-control rounded-0" name="tabs[${index}][NameCoOwner][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">PAN of Co-Owners</label>
                  <input type="text" class="form-control rounded-0" name="tabs[${index}][PAN_CoOwner][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">Aadhaar of Co-Owners</label>
                  <input type="number" class="form-control rounded-0" name="tabs[${index}][Aadhaar_CoOwner][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">Percentage Share</label>
                  <input type="number" class="form-control rounded-0 co-owner-share" name="tabs[${index}][PercentShareProperty][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group d-flex" style="flex-direction: column">
                  <label class="m-0">Cancel</label>
                  <div class="cancel btn btn-danger">
                      <i class="fas fa-trash"></i>
                  </div>
              </div>
          </td>
      </tr>`);
  });

  $("body").on("change", ".property_type", function () {
    var index = $(this).closest('.tab-content').data('tab');
    if (this.value == 'R') {
      $(this).closest('.tab-content').find('.tenant-div').removeClass('d-none');
      $(this).closest('.tab-content').find('.income-div').removeClass('d-none');
      $(this).closest('.tab-content').find('.tenant-div').find('.tenant-table tbody').html(`<tr>
          <td>
              <div class="form-group">
                  <label class="m-0">Name of Tenant</label>
                  <input type="text" class="form-control rounded-0"
                      name="tabs[${index}][NameofTenant][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">PAN of Tenant</label>
                  <input type="text" class="form-control rounded-0"
                      name="tabs[${index}][PANofTenant][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">Adhaar of Tenant</label>
                  <input type="number" class="form-control rounded-0"
                      name="tabs[${index}][AadhaarofTenant][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group d-flex" style="flex-direction: column">
                  <label class="m-0">Cancel</label>
                  <div class="cancel btn btn-danger">
                      <i class="fas fa-trash"></i>
                  </div>
              </div>
          </td>
      </tr>`);
    } else if (this.value == 'D') {
      $(this).closest('.tab-content').find('.income-div').removeClass('d-none');
    } else {
      $(this).closest('.tab-content').find('.income-div').find('input').val(0);
      $(this).closest('.tab-content').find('.tenant-div').addClass('d-none');
      $(this).closest('.tab-content').find('.income-div').addClass('d-none');
    }
  });

  $("body").on("click", ".add-tenant", function () {
    var index = $(this).closest('.tab-content').data('tab');
    $(this).closest('.tab-content').find('.tenant-div').find('.tenant-table tbody').append(`<tr>
          <td>
              <div class="form-group">
                  <label class="m-0">Name of Tenant</label>
                  <input type="text" class="form-control rounded-0"
                      name="tabs[${index}][NameofTenant][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">PAN of Tenant</label>
                  <input type="text" class="form-control rounded-0"
                      name="tabs[${index}][PANofTenant][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group">
                  <label class="m-0">Adhaar of Tenant</label>
                  <input type="number" class="form-control rounded-0"
                      name="tabs[${index}][AadhaarofTenant][]"
                       />
              </div>
          </td>
          <td>
              <div class="form-group d-flex" style="flex-direction: column">
                  <label class="m-0">Cancel</label>
                  <div class="cancel btn btn-danger">
                      <i class="fas fa-trash"></i>
                  </div>
              </div>
          </td>
      </tr>`);
  });

  $("body").on("keyup", ".co-owner-share", function () {
    var owner_share = 100;
    $(this).closest('.tab-content').find('.co-owner-share').each(function (ele) {
      console.log(ele)
      owner_share -= $(this).val();
    });

    $(this).closest('.tab-content').find('.owner_share').val(Math.max(0, owner_share));
  });

  function calculatePropertyIncome() {
    if (['D', 'R'].includes($(this).closest('.tab-content').find('.property_type').val())) {
      var rent_income = $(this).closest('.tab-content').find('.rent_income').val().replace(/,/g, '');
      var municipal_tax = $(this).closest('.tab-content').find('.municipal_tax').val().replace(/,/g, '');

      if (rent_income) { rent_income = parseInt(rent_income) } else { rent_income = 0 }
      if (municipal_tax) { municipal_tax = parseInt(municipal_tax) } else { municipal_tax = 0 };

      var deduction = (rent_income - municipal_tax) * 0.30;
      var net_income = rent_income - municipal_tax - deduction;

      $(this).closest('.tab-content').find('.deduction').val(Number(deduction).toLocaleString('en-in'));
      $(this).closest('.tab-content').find('.net_income').val(Number(net_income).toLocaleString('en-in'));

      var owner_share = $(this).closest('.tab-content').find('.owner_share').val();
      if (owner_share) { owner_share = parseInt(owner_share) } else { owner_share = 0 }

      $(this).closest('.tab-content').find('.rent_income_percent').val(Number(rent_income * owner_share / 100).toLocaleString('en-in'));
      $(this).closest('.tab-content').find('.municipal_tax_percent').val(Number(municipal_tax * owner_share / 100).toLocaleString('en-in'));
      $(this).closest('.tab-content').find('.deduction_percent').val(Number(deduction * owner_share / 100).toLocaleString('en-in'));
      $(this).closest('.tab-content').find('.net_income_percent').val(Number(net_income * owner_share / 100).toLocaleString('en-in'));
    }
  }

  $("body").on("keyup", ".rent_income", calculatePropertyIncome)
  $("body").on("keyup", ".municipal_tax", calculatePropertyIncome)
  $("body").on("change", ".owner_share", calculatePropertyIncome)

  // $('.house_property_form_submit').on('click', function (e) {
  //   e.preventDefault();
  //   $('.house_form').find('input[name="tab"]').val('exempt_income');
  //   // console.log($(this).closest('form'));
  //   HouseformSubmit();
  // });

  // $("body").on('click', '.house_tabs .tab-btn', function (e) {
  //   e.preventDefault();
  //   $('.house_form').find('input[name="redirect"]').val('false');
  //   HouseformSubmit()
  // })

  // $("body").on('click', '.salary_tabs .tab-btn', function (e) {
  //   e.preventDefault();
  //   $('.salary_form').find('input[name="redirect"]').val('false');
  //   SalaryformSubmit()
    
  // })

  function HouseformSubmit() {
    $('.house_form').find('input.inr_field').each(function(){
      let value = $(this).val()
      $(this).val(value.replace(/,/g, ''));
    })
    var formData = $('.house_form').serialize();
    console.log(formData)
    var year = $('#otherIncomeForm').find('input[name="year"]').val();
    $.ajax({
      url: API_ENDPOINTS.saveHouseData(year),
      type: 'post',
      data: formData,
      success: function (response) {
        toastr.options = {
          "positionClass": "toast-top-right",
          "preventDuplicates": true,
          "showDuration": "300",
          "hideDuration": "1000",
          "timeOut": "5000",
          "extendedTimeOut": "1000",
          "showEasing": "swing",
          "hideEasing": "linear",
          "showMethod": "fadeIn",
          "hideMethod": "fadeOut"
        };
        toastr.success(response.message, 'Success', {
          "toastClass": "toast-custom-success"
        });
        if (!response.no_redirect) {
          // setTimeout(() => {
          //   location.reload();
          // }, 2000);
        }
        console.log(response);
      },
      error: function (xhr, status, error) {
        // Display error toast notification
        toastr.options = {
          "positionClass": "toast-top-right",
          "preventDuplicates": true,
          "showDuration": "300",
          "hideDuration": "1000",
          "timeOut": "5000",
          "extendedTimeOut": "1000",
          "showEasing": "swing",
          "hideEasing": "linear",
          "showMethod": "fadeIn",
          "hideMethod": "fadeOut"
        };
        toastr.error(response.message, 'Success', {
          "toastClass": "toast-custom-success"
        });
        $(this).removeAttr('disabled');
      }
    });
  }

  // Function to calculate Net Agricultural Income
  function calculateNetIncome() {
    // Get input values
    const grossIncome = parseFloat(document.getElementById('GrossAgriRecpt').value.replace(/,/g, '')) || 0;
    const expenditure = parseFloat(document.getElementById('ExpIncAgri').value.replace(/,/g, '')) || 0;
    const unabsorbedLoss = parseFloat(document.getElementById('UnabAgriLossPrev8').value.replace(/,/g, '')) || 0;
    const agriIncomePortion = parseFloat(document.getElementById('AgriIncRule7and8').value.replace(/,/g, '')) || 0;

    // Calculate net income
    const netIncome = Math.max(0, Math.floor(grossIncome - (expenditure + unabsorbedLoss + agriIncomePortion)));

    // Display net income
    document.getElementById('NetAgriIncOrOthrIncRule7').value = netIncome;
    document.getElementById('NetAgriInc').value = netIncome;

    // Show or hide the additional form based on the net income
    if (netIncome > 500000) {
      document.getElementById('agri_land_div').classList.remove('d-none');
    } else {
      document.getElementById('agri_land_div').classList.add('d-none');
    }
  }

  // Add event listeners to input fields
  document.getElementById('GrossAgriRecpt')?.addEventListener('input', calculateNetIncome);
  document.getElementById('ExpIncAgri')?.addEventListener('input', calculateNetIncome);
  document.getElementById('UnabAgriLossPrev8')?.addEventListener('input', calculateNetIncome);
  document.getElementById('AgriIncRule7and8')?.addEventListener('input', calculateNetIncome);

  function addMore() {
    const html = `<tr>
              <td>
                <div class="form-group">
                  <label class="m-0">Name Of District</label>
                  <input type="text" class="form-control rounded-0" name="district[]"
                     required/>
                </div>
              </td>
              <td>
                <div class="form-group">
                  <label class="m-0">Pincode</label>
                  <input type="number" class="form-control rounded-0" name="pincode[]"
                     required/>
                </div>
              </td>
              <td>
                <div class="form-group">
                  <label class="m-0">Measurement (Acres)</label>
                  <input type="text" class="form-control rounded-0" name="measurement[]"
                     required/>
                </div>
              </td>
              <td>
                <div class="form-group">
                  <label class="m-0">Ownership Status</label>
                  <select class="form-control rounded-0" name="ownership[]" required>
                    <option value="">Select Option</option>
                    <option value="O">Owned</option>
                    <option value="H">Held on Lease</option>
                  </select>
                </div>
              </td>
              <td>
                <div class="form-group">
                  <label class="m-0">Source of water</label>
                  <select class="form-control rounded-0" name="water_source[]" required>
                    <option value="">Select Option</option>
                    <option value="IRG">Irrigated</option>
                    <option value="RF">Rain-Fed</option>
                  </select>
                </div>
              </td>
              <td>
                <!-- Cancel Icon -->
                <div class="form-group d-flex" style="flex-direction: column">
                  <label class="m-0">Cancel</label>
                  <div class="cancel btn btn-danger">
                    <i class="fas fa-trash"></i>
                  </div>
                </div>
              </td>
            </tr>`;

    $('#agri_land_table tbody').append(html);
    $('#add_more_agri_land').html('Add More');

  }

  $('body').on('click', '.add-more-tcs-form', function () {
    var newEntryHtml = $('.tcs-certificate-deductor').first().clone();
      $(newEntryHtml).find('input,select').val(null);
    $(newEntryHtml).insertBefore($('.add-more-tcs-form'));
  });


$('body').on('click', '.add-more-spi-income', function () {
  var newEntryHtml = `
    <div class="row align-items-end">
    <div class="col-md-2">
        <div class="form-group">
            <input type="text" class="form-control rounded-0" name="spi_name_of_person[]" />
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <input type="text" class="form-control rounded-0" name="spi_pan_of_person[]" />
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <input type="text" class="form-control rounded-0" name="spi_relationship[]" />
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <input type="number" class="form-control rounded-0" name="spi_amount[]" />
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <select name="spi_head_of_income[]" class="form-control rounded-0">
                <option selected="selected" >Select</option>
                <option value="OS">Other Sources</option>
                <option value="HP">House Property</option>
                <option value="SA">Salary Income</option>
                <option value="CG">Capital Gain</option>
                <option value="EI">Exempt Income</option>
            </select>
        </div>
    </div>
    <div class="cancel cancel-spi btn btn-danger align-items-center justify-content-center align-self-center mb-1 ml-3">
        <i class="fas fa-trash"></i>
    </div>
</div>

  `;

  $(newEntryHtml).insertBefore($('.add-more-spi-income'));
});
$(document).on('click', '.cancel-spi', function() {
  $(this).closest('.row').remove();
});

$(document).on('click', '.add-more-depreciation', function() {
  var clone = $('.depreciation_data').first().clone();
  $(clone).find('input,select').val(null);
  $(clone).insertBefore($('.add-more-depreciation'));
  initInrAmount()
});

$(document).on('click', '.add-more-loss', function() {
  var clone = $('.losses_data').first().clone();
  $(clone).find('input,select').val(null);
  $(clone).insertBefore($('.add-more-loss'));
  initInrAmount()
});


  $("body").on('click', '.remove-tds-tcs', function (e) {
    e.preventDefault();
    if ($('.tcs-certificate-deductor').length >1){
      $(this).closest('.tcs-certificate-deductor').remove();
    }
  });
  
  $("body").on('click', '.remove-tds-property', function (e) {
    e.preventDefault();
    if ($('.tds-property-entry').length >1){
      $(this).closest('.tds-property-entry').remove();
    }
  });

  $("body").on('click', '.delete-non-salary-tds', function (e) {
    e.preventDefault();
    if ($('.non-salary-tds-items').length >1){
      $(this).closest('.non-salary-tds-items').remove();
    }else{
      $(this).closest('.non-salary-tds-items').find('input,select').val(null);
    }
  });

  $('body').on('click', '.add-more-tds-property', function () {
    var newEntryHtml = $('.tds-property-entry').first().clone();
    $(newEntryHtml).find('input,select').val(null);
    console.log(newEntryHtml);
    $(newEntryHtml).insertBefore($('.add-more-tds-property'));
  });
  

  

  // $(document).ready(function () {
  //   $('#submit_exempt_income').click(function (event) {
  //     event.preventDefault();
  //     if ($("#exempt_income").validate().form()) {
  //       $(this).attr('disabled', true);
  //       var formData = $('#exempt_income').serialize();
  //       var year = $('#otherIncomeForm').find('input[name="year"]').val();
  //       $.ajax({
  //         url: API_ENDPOINTS.saveExemptIncome(year),
  //         type: 'post',
  //         data: formData,
  //         success: function (response) {
  //           toastr.options = {
  //             "positionClass": "toast-top-right",
  //             "preventDuplicates": true,
  //             "showDuration": "300",
  //             "hideDuration": "1000",
  //             "timeOut": "5000",
  //             "extendedTimeOut": "1000",
  //             "showEasing": "swing",
  //             "hideEasing": "linear",
  //             "showMethod": "fadeIn",
  //             "hideMethod": "fadeOut"
  //           };
  //           toastr.success(response.message, 'Success', {
  //             "toastClass": "toast-custom-success"
  //           });
  //           console.log(response);
  //           setTimeout(() => {
  //             location.reload();
  //           }, 2000);
  //         },
  //         error: function (xhr, status, error) {
  //           // Display error toast notification
  //           toastr.options = {
  //             "positionClass": "toast-top-right",
  //             "preventDuplicates": true,
  //             "showDuration": "300",
  //             "hideDuration": "1000",
  //             "timeOut": "5000",
  //             "extendedTimeOut": "1000",
  //             "showEasing": "swing",
  //             "hideEasing": "linear",
  //             "showMethod": "fadeIn",
  //             "hideMethod": "fadeOut"
  //           };
  //           toastr.error(response.message, 'Success', {
  //             "toastClass": "toast-custom-success"
  //           });
  //           $(this).removeAttr('disabled');
  //         }
  //       });
  //     }
  //   });
  // });

  let other_exm_inc_html = `<div class="row field-row">
        <div class="col-md-3">
            <div class="form-group">
              <label>Source</label>
              <select class="form-control exempt_select" name="other_exm_inc_source[]" required>
                <option selected="selected" value="Sec1010BC">Sec 10(10BC)-Any amount from the Central/State Govt./local authority by way of compensation on account of any disaster</option>
                <option value="Sec1010D">Sec 10(10D)- Any sum received under a life insurance policy except mentioned in sub-clause(a) to(d)</option>
                <option value="Sec1011">Sec 10(11)-Statuory Provident Fund received</option>
                <option value="Sec1012">Sec 10(12)-Recognised Provident Fund received</option>
                <option value="Sec1012C">Sec 10(12C)-Any payment from Agniveer Corpus Fund to a person enrolled under the Agnipath Scheme or to his nominee</option>
                <option value="Sec1013">Sec 10(13)-Approved superannuation fund received</option>
                <option value="Sec1016">Sec 10(16)-Scholarships granted to meet the cost of education</option>
                <option value="Sec1017">Sec 10(17)-Allownace MP/MLA/MLC</option>
                <option value="Sec1017A">Sec 10(17A)-Award instituted by Government</option>
                <option value="Sec1018">Sec 10(18)-Pension received by winner of  "Param Vir Chakra" or "Maha Vir Chakra" or "Vir Chakra" or such other gallantry award</option>
                <option value="DefenseMedical">Defense medical disability pension</option>
                <option value="Sec1019">Sec 10(19)-Armed Forces Family pension in case of death during operational duty</option>
                <option value="Sec1026">Sec 10(26)-Any income as referred to in section 10(26)</option>
                <option value="Sec1026AAA">Sec 10(26AAA)-Any income as referred to in section 10(26AAA)</option>
                <option value="OTH">Any Other</option>
              </select>
            </div>
          </div>
          <div class="col-md-3">
            <div class="form-group narration_input">
              <label>Narration</label><span id="requiredIndicator"> </span>
              <input type="text" name="other_exm_inc_narration[]" class="form-control rounded-0"  required/>
            </div>
          </div>
          <div class="col-md-3">
            <div class="form-group">
              <label>Amount</label>
              <input type="text" name="other_exm_inc_amount[]" class="form-control rounded-0 inr_field"
                 required/>
            </div>
          </div>
          <div class="col-md-3 d-flex form-group align-items-end">
            <button class="btn btn-danger delete_other_exm_inc" type="button"><i class="fas fa-trash"></i></button>
          </div>
        </div>`;


  $('#other_ppf_toggle').on('click', function () {
    $('#other_ppf_card').toggleClass('d-none');
  });

  $('#add_more_other_ppf').on('click', function () {
    var other_inc_clone = $('.other_ppfs .row').first().clone();
    $(other_inc_clone).find('input[name="other_ppf_narration[]"]').val('');
    $(other_inc_clone).find('input[name="other_ppf_amount[]"]').val('');
    $('.other_ppfs').append(other_inc_clone);
  });

  $('#other_exempt_income_toggle').on('click', function () {
    $('#other_exempt_income_card').append(other_exm_inc_html);
    $(this).html('Add More');
    applyChnageTypeNarration()
  });

  $(document).on('click', '.delete_other_exm_inc', function () {
    $(this).closest('.row').remove();
    if (!$('#other_exempt_income_card').children().length) {
      $('#other_exempt_income_toggle').html('Add Other Income')
    }
  });

  $(document).on('click', '.cancel', function () {
    $(this).closest('tr').remove();
    if (!$('#agri_land_table tbody').children().length) {
      $('#add_more_agri_land').html('Add Agriculture Land');
    }
  });

  document.addEventListener("input", function (e) {

    if (e.target.name == 'pincode[]') {
      const pincode = e.target.value;
      if (pincode.length === 6) {
        fetch(`/home/get-location-details/${pincode}`)
          .then(response => response.json())
          .then(data => {
            if (data.state && data.district) {
              e.target.closest("tr").querySelector('[name="district[]"]').value = data.district;
            } else {
              console.error('Pincode not found');
            }
          })
          .catch(error => {
            console.error('Error fetching location details:', error);
          });
      }
    }
  });

  let other_inc_html = `<div class="row field-row">
        <div class="col-md-3">
            <div class="form-group">
              <label>Source</label>
              <select class="form-control dynamic-select" name="other_inc_source[]">
                <option selected="selected" value="NotInitialized">Please select</option>
                <option value="FamilyPension">Family pension</option>
                <option value="NOT89A">Income from Retirement Benefit account maintained in a notified country u/s 89A</option>
                <option value="OTHNOT89A">Income from Retirement Benefit account maintained in a country other than a country notified u/s 89A</option>
                <option value="LtryPzzlChrgblUs115BB">Income from lotteries, puzzles, races, card games etc u/s 115BB</option>
                <option value="IncChrgblUs115BBJ">Income from online gaming u/s 115BBJ</option>
                <option value="5ACA1a">Income from GDR purchased in foreign currency -resident u/s 115ACA(1)(a)</option>
                <option value="5BBF">Tax on income from patent 115BBF</option>
                <option value="562iii">Rental income from machinery, plants, buildings</option>
                <option value="CashCreditsUs68">Cash credits u/s 68</option>
                <option value="UnExplndInvstmntsUs69">Unexplained investments u/s 69</option>
                <option value="UnExplndMoneyUs69A">Unexplained investments u/s 69A</option>
                <option value="UnDsclsdInvstmntsUs69B">Undisclosed investments etc. u/s 69</option>
                <option value="UnExplndExpndtrUs69C">Unexplained expenditure etc. u/s 69C</option>
                <option value="AmtBrwdRepaidOnHundiUs69D">Amount borrowed or repaid on hundi u/s 69D</option>
                <option value="AnyOtherIncome">Others</option>
              </select>
            </div>
          </div>
          <div class="col-md-3">
            <div class="form-group narration_input">
              <label>Narration</label><span id="requiredIndicator"> </span>
              <input type="text" name="other_inc_narration[]" class="form-control rounded-0" />
            </div>
          </div>
          <div class="col-md-3">
            <div class="form-group">
              <label>Amount</label>
              <input type="text" name="other_inc_amount[]" class="form-control rounded-0 inr_field" 
                 />
            </div>
          </div>
          <div class="col-md-3 d-flex form-group align-items-end">
            <button class="btn btn-danger delete_other_inc" type="button"><i class="fas fa-trash"></i></button>
          </div>
        </div>`;

  $('#pf_toggle').on('click', function () {
    $('#pf_card').toggleClass('d-none');
  })

  $('#other_income_int_toggle').on('click', function () {
    $('#other_income_int_card').toggleClass('d-none');
  });

  $('#add_more_other_inc_int').on('click', function () {
    var other_inc_clone = $('.other_incs .row').first().clone();
    $(other_inc_clone).find('input[name="other_inc_int_narration[]"]').val('');
    $(other_inc_clone).find('input[name="other_inc_int_amount[]"]').val('');
    $('.other_incs').append(other_inc_clone);
    initInrAmount();
  });

  $('#other_income_toggle').on('click', function () {
    $('#other_income_card').append(other_inc_html);
    $(this).html('Add More');
    initInrAmount();
    applyChnageTypeNarration()
  });

  $(document).on('click', '.delete_other_inc', function () {
    $(this).closest('.row').remove();
    if (!$('#other_income_card').children().length) {
      $('#other_income_toggle').html('Add Other Income')
    }
  })

  $(document).on('change', '[name="other_inc_source[]"]', function () {
    $(this).closest('.row').find('input[name="other_inc_narration[]"]').removeAttr('required')
    if ($(this).val() == 'Source_Others') {
      $(this).closest('.row').find('input[name="other_inc_narration[]"]').attr('required', true)
    }
  })

  $('#add_more_domestic_div').on('click', function () {
    var domestic_div_clone = $('.domestic_div').first().clone();
    $(domestic_div_clone).find('input[name="narration[]"]').val('');
    $(domestic_div_clone).find('input[name="other_inc_amount[]"]').val('');
    $('.other_incs').append(other_inc_clone);
  });

  $('.add_gift_btn').on('click', function () {
    $('.gift_table tbody').append(`<tr>
        <td>
          <div class="form-group">
            <label>Nature of Gift Assest</label>
            <select name="562x[]" class="form-control rounded-0">
              <option selected="selected" value="Aggrtvaluewithoutcons562x">Money/Cash Received without
                Consideration</option>
              <option value="Immovpropwithoutcons562x">Immovable Property is received without Consideration
              </option>
              <option value="Immovpropinadeqcons562x">Immovable Property is received for inadequate Consideration
              </option>
              <option value="Anyotherpropwithoutcons562x">Any other property received without consideration
              </option>
              <option value="Anyotherpropinadeqcons562x">Any other Property is received for inadequate
                Consideration</option>
            </select>
          </div>
        </td>
        <td>
          <div class="form-group">
            <label>Description
            </label>
            <input type="text" name="562x_narration[]" class="form-control rounded-0"
               />
          </div>
        </td>
        <td>
          <div class="form-group">
            <label>Taxable Amount
            </label>
            <input type="text" name="562x_amount[]" class="form-control rounded-0 inr_field" />
          </div>
        </td>
        <td>
          <!-- Cancel Icon -->
          <div class="form-group d-flex" style="flex-direction: column">
            <label>Cancel</label>
            <div class="btn btn-danger gift_remove">
              <i class="fas fa-trash"></i>
            </div>
          </div>
        </td>
      </tr>`);
    $('.add_gift_btn').html('Add More');
    initInrAmount();
  })

  $(document).on('click', '.gift_remove', function () {
    $(this).closest('tr').remove();
    if (!$('.gift_table tbody').children().length) {
      $('.add_gift_btn').html('Add Gift Income');
    }
  });

  $('.add_special_inc_btn').on('click', function () {
    $('.special_inc_table tbody').append(`<tr>
              <td>
                <div class="form-group">
                  <label>Source</label>
                  <select name="special_inc_source[]" class="form-control rounded-0">
                    <option value="5A1aii">Interest received from government/Indian concerns received in foreign
                      currency
                      115A(1)(a)(ii) </option>
                    <option value="5A1aiia">Interest from Infrastructure Debt Fund -:115A(1)(a)(iia) </option>
                    <option value="5A1aiiaa">Interest as per Sec. 194LC(1) -:115A(1)(a)(iiaa) </option>
                    <option value="5A1aiiaaP">Income received by non-resident as referred in proviso to section 194LC(1)
                      -
                      5A1aiiaaP:115A(1)(a)(iiaa) </option>
                    <option value="5A1aiiab">Interest as per Sec. 194LD -:115A(1)(a)(iiab) </option>
                    <option value="5A1aiiac">Interest as per Sec. 194LBA -:115A(1)(a)(iiac) </option>
                    <option value="5A1aiii">Income received in respect of units of UTI purchased in foreign currency
                      -:115A(1)(a)(iii)
                    </option>
                    <option value="5A1bA">Income from royalty & technical services -:115A(1)(b)(A) & 115A(1)(b)(B)
                    </option>
                    <option value="5AC1ab">Income by way of interest on bonds purchased in foreign currency -
                      non-resident :115AC(1)(a)
                    </option>
                    <option value="5AC1abD">Income by way of dividend on GDRs purchased in foreign currency -
                      non-resident :115AC(1)(b)
                    </option>
                    <option value="5ACA1a">Income from GDR purchased in foreign currency - resident -:115ACA(1)(a)
                    </option>
                    <option value="5AD1i">Income (other than Dividend) received by an FII in respect of securities
                      (other than units
                      as per Sec 115AB) -:115AD(1)(i) </option>
                    <option value="5AD1iDiv">Income (being dividend) received by an FII in respect of securities (other
                      than units
                      referred to in section 115AB) -:115AD(1)(i) </option>
                    <option value="5AD1iP">Income received by an FII in respect of bonds or government securities as per
                      Sec 194LD
                      :115AD(1)(i) </option>
                    <option value="5ADiiiP">Proviso to 115AD(iii) - 5ADiiiP </option>
                    <option value="5BBA">Tax on non-residents sportsmen or sports associations - 5BBA:115BBA </option>
                    <option value="5BB">Winnings from lotteries, puzzles, races, games, etc. - 5BB:115BB </option>
                    <option value="5BBJ">Winnings from online games - 5BBJ:115BBJ </option>
                    <option value="5BBC">Anonymous donations - 5BBC:115BBC </option>
                    <option value="5BBG">Tax on income from transfer of carbon credits - 5BBG:115BBG </option>
                    <option value="5BBF">Tax on income from transfer of carbon credits - 5BBF:115BBF </option>
                    <option value="5Ea">Investment income - 5Ea:115E(a) </option>
                    <option value="5ACA1">Income from GDR purchased in foreign currency - resident - 5ACA1a:115ACA(1)(a)
                    </option>

                  </select>
                </div>
              </td>
              <td>
                <div class="form-group">
                  <label>Taxable Amount
                  </label>
                  <input type="text" name="special_inc_amount[]" class="form-control rounded-0 inr_field" 
                     />
                </div>
              </td>
              <td>
                <!-- Cancel Icon -->
                <div class="form-group d-flex" style="flex-direction: column">
                  <label>Cancel</label>
                  <div class="btn btn-danger special_inc_remove">
                    <i class="fas fa-trash"></i>
                  </div>
                </div>
              </td>
            </tr>`);
    $('.add_special_inc_btn').html('Add More');
    initInrAmount();
  })

  $(document).on('click', '.special_inc_remove', function () {
    $(this).closest('tr').remove();
    if (!$('.special_inc_table tbody').children().length) {
      $('.add_special_inc_btn').html('Add Special Income');
    }
  });


  //employer salary
  $(document).on('change', '.toggleAddress', function() {
    $(this).closest('p').next('.address-row').toggle(this.checked);
    var label = $(this).closest('p').find('.toggleAddressLabel');
    if (this.checked) {
      console.log(label.text);
      label.text('Hide Address (Address is Mandatory in ITR-2 or ITR-3)');
  } else {
    
    label.text('Show Address (Address is Mandatory in ITR-2 or ITR-3)');
  }
    console.log("clicked");
});


$(function(){
  $('.toggleAddress').each(function() {
    if ($(this).is(':checked')) {
      $(this).closest('p').next('.address-row').show();
    } else {
      $(this).closest('p').next('.address-row').hide();
    }
  });
});



  //tooltip


  function switchAccordion() {
    var element = $('.accordion-item-description-wrapper')[4];
    if (element.style.overflow == 'visible') {
      element.style.overflow = 'hidden';
      
    } else {
        element.style.overflow = 'visible';
    }
  }


 $("body").on('click', '.add-more-gst', function () {
    var clone = $('.gst-row').first().clone();
    $(clone).find('input,select').val(null);
    $(clone).insertBefore($(this));
 });


var gstnPattern = /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}[Z]{1}[0-9A-Z]{1}$/;

function validateGstn(inputElement) {
    var gstnValue = inputElement.value;
    var messageElement = inputElement.nextElementSibling;
    if (!messageElement || !messageElement.classList.contains('gstn-message')) {
        messageElement = document.createElement('span');
        messageElement.className = 'gstn-message';
        messageElement.style.color = 'red';
        messageElement.style.fontSize = 'small';
        inputElement.parentNode.insertBefore(messageElement, inputElement.nextSibling);
        document.getElementById('submit_gstn').disabled=true;
    }

    // Validate and update the message
    if (!gstnPattern.test(gstnValue)) {
        inputElement.style.borderColor = 'red';
        messageElement.textContent = 'Invalid GSTN format';
        document.getElementById('submit_gstn').disabled=true;
    } else {
        inputElement.style.borderColor = '';
        messageElement.textContent = '';
        document.getElementById('submit_gstn').disabled=false;
    }
}



$('body').on('click', '.remove_gst', function () {
  if($('.gst-row').length > 1){
    $(this).closest('.gst-row').remove();
  }
  else{
    $(this).closest('.gst-row').find('input,select').val(null);
  }
});

function initInrAmount(){
  const amountFields = document.querySelectorAll('input.inr_field');

  amountFields.forEach(function (field) {
      field.addEventListener('input', function (e) {
          let value = e.target.value.replace(/,/g, '');
          e.target.value = Number(value).toLocaleString('en-IN');
      });

      field.closest('form')?.addEventListener('submit', function () {
          amountFields.forEach(function (field) {
              field.value = field.value.replace(/,/g, '');
          });
      });
  });
}
document.addEventListener('DOMContentLoaded', function () {
  initInrAmount()
});

function validateTAN() {
  var tanInput = document.getElementById("TANofDeductor");
  var tanPattern = /^(HYD|VPN|BBN|BPL|JBP|CHE|CMB|MRI|DEL|CAL|MRT|AHM|BRD|RKT|SRT|BLR|AGR|KNP|CHN|TVD|ALD|LKN|MUM|NGP|AMR|JLD|PTL|RTK|KLP|NSK|PNE|PTN|RCH|JDH|JPR|SHL)[A-Z][0-9]{5}[A-Z]$/;
  var invalidTanText = document.getElementById("invalidTanText");

  // Reset error message on input
  tanInput.addEventListener('input', function () {
    if (invalidTanText) {
      invalidTanText.style.display = "none";
    }
  });

  // Perform validation
  if (!tanPattern.test(tanInput.value)) {
    if (invalidTanText) {
      invalidTanText.style.display = "block";
    }
    return false;
  }

  return true;
}

function validatePAN() {
  var pan = document.getElementById("PANofOtherPerson").value;
  var panPattern = /^[A-Z]{5}[0-9]{4}[A-Z]$/;
  document.getElementById("PANofOtherPerson").addEventListener('input', function() {
      document.getElementById("invalidPanText").style.display = "none";
  });
  if (!panPattern.test(pan)) {
      document.getElementById("invalidPanText").style.display = "block";
      return false;
  }
  return true;
}

function validateAadhaar() {
  var aadhaar = document.getElementById("AadhaarOfOtherPerson").value;
  var aadhaarPattern = /^[0-9]{12}$/;
  document.getElementById("AadhaarOfOtherPerson").addEventListener('input', function() {
      document.getElementById("invalidAadhaarText").style.display = "none";
  });
  if (!aadhaarPattern.test(aadhaar)) {
      document.getElementById("invalidAadhaarText").style.display = "block";
      return false;
  }
  return true;
}

function validateTdsOtherForm() {
  var isPanValid = validatePAN();
  var isAadhaarValid = validateAadhaar();
  return isPanValid && isAadhaarValid;
}

$('.add-more-non-salary-tds').on('click', function() {
  // Define the HTML content to be inserted
  var newRowHtml = $('.non-salary-tds-items').first().clone();
  $(newRowHtml).find('input,select').val(null);
  // Insert the new row before the button row
  $(newRowHtml).insertBefore($('.add-more-non-salary-tds'));
});

document.addEventListener("DOMContentLoaded", function () {
  document.addEventListener('keydown',function(event){
    if(event.key == '/' && event.target.tagName != 'INPUT'){
      event.preventDefault();
      document.getElementById("search-query").select();
      document.getElementById("search-query").focus();
    }
  })
});


// make narration field optional and rquired when other is selected
function handleSelectChange_other(event) {
  var select = event.target;
  var fieldRow = select.closest('.field-row');
  var narrationField = fieldRow.querySelector('.form-group input[type="text"]');
  var narration_Div = fieldRow.querySelector('.narration_input');
  var requiredIndicator = fieldRow.querySelector('#requiredIndicator');
  
  if (select.value === 'AnyOtherIncome') { 
    let new_elem = `<input required type="text" name="other_inc_narration[]" class="form-control rounded-0">`
    narrationField.remove()
    narration_Div.insertAdjacentHTML('beforeend', new_elem)
      requiredIndicator.style.color='red';
      requiredIndicator.textContent = ' *(required)';
  } else {
    narrationField.required = false;
      requiredIndicator.style.color='gray';
      requiredIndicator.textContent = ' (optional)';
  }
}

function handleSelectChange_exempt(event) {
  var select = event.target;
  var fieldRow = select.closest('.field-row');
  var narrationField = fieldRow.querySelector('.form-group input[type="text"]');
  var narration_Div = fieldRow.querySelector('.narration_input');
  var requiredIndicator = fieldRow.querySelector('#requiredIndicator');
  console.log("====>>>",select.value)
  if (select.value === 'OTH') { 
    console.log("getting herer")
    let new_elem = `<input required type="text" name="other_exm_inc_narration[]" class="form-control rounded-0">`
    narrationField.remove()
    narration_Div.insertAdjacentHTML('beforeend', new_elem)
      requiredIndicator.style.color='red';
      requiredIndicator.textContent = ' *(required)';
  } else {
    narrationField.required = false;
      requiredIndicator.style.color='gray';
      requiredIndicator.textContent = ' (optional)';
  }
}

function applyChnageTypeNarration() {
  document.querySelectorAll('.dynamic-select').forEach(function(select) {
    select.addEventListener('change', handleSelectChange_other);
  });
  document.querySelectorAll('.exempt_select').forEach(function(select) {
    select.addEventListener('change', handleSelectChange_exempt);
  });
}

document.addEventListener('DOMContentLoaded', function() {
  applyChnageTypeNarration()
});

$('.add-more-holding-company').on('click', function() {
  // Define the HTML content to be inserted
  var newRowHtml = $('.holding-company-items').first().clone();
  $(newRowHtml).find('input,select').val(null);
  // Insert the new row before the button row
  $(newRowHtml).insertBefore($('.add-more-holding-company'));
});

$(document).on('click', '.remove-holding-company', function() {
  if($('.holding-company-items').length == 1){
    $('.holding-company-items').find('input,select').val(null);
  }else{
    $(this).closest('.holding-company-items').remove();
  }
})

$('.add-more-subsidiary-company').on('click', function() {
  // Define the HTML content to be inserted
  var newRowHtml = $('.subsidiary-company-items').first().clone();
  $(newRowHtml).find('input,select').val(null);
  // Insert the new row before the button row
  $(newRowHtml).insertBefore($('.add-more-subsidiary-company'));
});

$(document).on('click', '.remove-subsidiary-company', function() {
  if($('.subsidiary-company-items').length == 1){
    $('.subsidiary-company-items').find('input,select').val(null);
  }else{
    $(this).closest('.subsidiary-company-items').remove();
  }
})